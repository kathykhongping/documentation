{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"PingOne DaVinci Partner Documentation \u00b6","title":"Overview"},{"location":"#pingone-davinci-partner-documentation","text":"","title":"PingOne DaVinci Partner Documentation"},{"location":"acuant/","text":"Acuant Connector \u00b6 Author: Evan Green Introduction \u00b6 Acuant\u00aeGO is a automated solution for identity verification, KYC, and digital onboarding. The Acuant Connector for PingOne DaVinci allows a DaVinci flow to redirect to an Acuant\u00aeGO Customer Journey. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Acuant\u00aeGO documentation Requirements \u00b6 To use the connector, you'll need: Acuant\u00aeGO Subscription Completed Go Form Link AcuantGo Setup \u00b6 Configure your Acuant\u00aeGO customer Journey Configure result redirects Add result Query Parameters Connector Setup \u00b6 Create an Acuant Connector in your PingOne DaVinci Environment Add the redirect URL from your Acuant Connection into the Integration AcuantGo Customer Journey into your connector For each result, add a query parameter for Accept, Deny, or Review at the end of your PingOne DaVinci redirect URL, depending on the result. e.g. ?result=deny (see screenshot above) Add the connection to a PingOne DaVinci Flow Configure the Redirect to Journey capability with the AcuantGO Journey URL Add any pre-poulated fields by clicking 'Add' and using the variable names as described in Pass Field Information to a Journey through a URL Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: Identity Verification \u00b6 The connector can be used in a workflow to verify an identity as part of a workflow Onboarding \u00b6 User data collection and identity verification as part of an onboarding flow Capabilities \u00b6 Redirect to Journey (initializeAuthorizationRequest) \u00b6 Send user to the AcuantGo User Journey Journey URL textField \u00b6 The URL of the Journey in AcuantGo Pre-populated Fields variableInputList \u00b6 Pre-fill user information. Troubleshooting \u00b6 For issues with AcuantGO please create a ticket in the Acuant Support Portal","title":"Acuant Connector"},{"location":"acuant/#acuant-connector","text":"Author: Evan Green","title":"Acuant Connector"},{"location":"acuant/#introduction","text":"Acuant\u00aeGO is a automated solution for identity verification, KYC, and digital onboarding. The Acuant Connector for PingOne DaVinci allows a DaVinci flow to redirect to an Acuant\u00aeGO Customer Journey.","title":"Introduction"},{"location":"acuant/#setup","text":"","title":"Setup"},{"location":"acuant/#resources","text":"For information and setup help, see the following sections of the Acuant\u00aeGO documentation","title":"Resources"},{"location":"acuant/#requirements","text":"To use the connector, you'll need: Acuant\u00aeGO Subscription Completed Go Form Link","title":"Requirements"},{"location":"acuant/#acuantgo-setup","text":"Configure your Acuant\u00aeGO customer Journey Configure result redirects Add result Query Parameters","title":"AcuantGo Setup"},{"location":"acuant/#connector-setup","text":"Create an Acuant Connector in your PingOne DaVinci Environment Add the redirect URL from your Acuant Connection into the Integration AcuantGo Customer Journey into your connector For each result, add a query parameter for Accept, Deny, or Review at the end of your PingOne DaVinci redirect URL, depending on the result. e.g. ?result=deny (see screenshot above) Add the connection to a PingOne DaVinci Flow Configure the Redirect to Journey capability with the AcuantGO Journey URL Add any pre-poulated fields by clicking 'Add' and using the variable names as described in Pass Field Information to a Journey through a URL","title":"Connector Setup"},{"location":"acuant/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"acuant/#identity-verification","text":"The connector can be used in a workflow to verify an identity as part of a workflow","title":"Identity Verification"},{"location":"acuant/#onboarding","text":"User data collection and identity verification as part of an onboarding flow","title":"Onboarding"},{"location":"acuant/#capabilities","text":"","title":"Capabilities"},{"location":"acuant/#redirect-to-journey-initializeauthorizationrequest","text":"Send user to the AcuantGo User Journey","title":"Redirect to Journey (initializeAuthorizationRequest)"},{"location":"acuant/#journey-url-textfield","text":"The URL of the Journey in AcuantGo","title":"Journey URL textField"},{"location":"acuant/#pre-populated-fields-variableinputlist","text":"Pre-fill user information.","title":"Pre-populated Fields variableInputList"},{"location":"acuant/#troubleshooting","text":"For issues with AcuantGO please create a ticket in the Acuant Support Portal","title":"Troubleshooting"},{"location":"arkose/","text":"Arkose Connector \u00b6 Author: Arkose Labs Introduction \u00b6 Use the Arkose DaVinci Connector to plugin the Arkose Detect and/or Challenge in any of your identity flows. The Arkose connector offers an easy way to verify the validity of the Arkose token and leverage the intel provided by Arkose to enhance the security of your workflow. The connector response can be used to: - Provide session risk information for appropriate authenticaiton decisions i.e. allow/ challenge or deny a session - Secure your reset password flow - Prevent bulk fake account creations in your user store and for many similar use cases. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Arkose Labs documentation: Calling the Verify API Requirements \u00b6 To use the connector, you'll need: [Your Arkose Private Key] [Your company URL, if applicable] Please contact your account team, if you don't have these already. Setting up the connector \u00b6 In the DaVinci platform, add an * Arkose connection. For help, see Adding a connection . Connector settings \u00b6 Once you have added the Arkose connection, select the connector in the flow studio and edit the connection to update the General settings. Company \u00b6 Provide your company name as it appears on your Arkose Verify URL subdomain Private Key \u00b6 Provide your Arkose private key for this flow here Capabilities \u00b6 Verify \u00b6 This capability is used verify the Arkose token and optionally send log data to Arkose Properties \u00b6 Private Key \u00b6 The Arkose token will be mapped from the previous HTML connection. The value can be mapped as {{local. .payload.output.arkoseToken}} where connectionID is the identifier of the HTML connection that presents the login form to the user in the DaVinci flow. HTTP Method \u00b6 Use the GET HTTP method to fetch the Verify API response for the current session or POST method to provide optional log data to Arkose Labs, while fetching the API response. The log data is a freeform string that allows information to be passed to the Verify API. This can be used to pass basic information that you want stored by Arkose with the session data. This can be used internally by Arkose when performing manual traffic analysis. Connector Response \u00b6 The connector returns a status code and a raw response object when successful. The fields values from the response object can be individually mapped to downstream connectors to drive the user flows. Using the connector in a flow \u00b6 You can use the connector in a variety of use cases. The connector will require the Arkose session token as an input. The session token will be generated client side upon interaction with the user, for instance, on a login page. In order to generate the the Arkose session token, you can use the HTTP connection as follows: 1. Add the HTTP connection and choose the Custom HTML Template Action from the list. 2. Add the 'username pasword form' under the HTML template. You can choose 'data-skcomponent' class to use the default Ping DaVinci form components. 3. Add a hidden div tag to the HTML template. This div tag will include the primary form submit button, which is hidden to prevent default form submit. This tag will also include the Arkose token data component. 4. The HTML template will include an additional submit button (not hidden) which will be used to trigger the Arkose enforcement challenge. 5. Use the Script template to embed the Arkose javacript on the login form. The script will also override the form's default submit action. 6. A callback will be defined to setup and initiate the Arkose session and challenge. Once the challenge is completed, the Arkose session token value will be set in the hidden data component and the form will be submitted to proceed to the next step. For more details on setting up the callback function, please refer to Arkose Client Side Setup Some example use cases are as follows: Authenticating a user \u00b6 The Arkose session token that is generated as part of user credentials submission is verified by the Arkose connector. The connector response can be used in the authentication flow to make authentication decisions and allow/ challenge or deny a user access based on the Arkose risk category for a given session. Registering a user \u00b6 The Arkose session token that is generated as part of user sign up process is verified by the Arkose connector. The connector response can be used in the registration flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session. Resetting a user's password \u00b6 The Arkose session token that is generated as part of password reset process is verified by the Arkose connector. The connector response can be used in the password reset flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session. Capabilities \u00b6 Verify (verify) \u00b6 This capability is used verify the Arkose token and optionally send log data to Arkose Session Token textField \u00b6 The Arkose session token that is generated on the HTML form (client side setup) HTTP Method dropDown \u00b6 HTTP Method to be used to verify Arkose session GET POST Log Data textField \u00b6 Information to be passed to Arkose along with session data to be used for manual traffic analysis Troubleshooting \u00b6 If the connector returns a 400 - bad request as a response, ensure that the Arkose token is correctly mapped as an input to the connector.","title":"Index"},{"location":"arkose/#arkose-connector","text":"Author: Arkose Labs","title":"Arkose Connector"},{"location":"arkose/#introduction","text":"Use the Arkose DaVinci Connector to plugin the Arkose Detect and/or Challenge in any of your identity flows. The Arkose connector offers an easy way to verify the validity of the Arkose token and leverage the intel provided by Arkose to enhance the security of your workflow. The connector response can be used to: - Provide session risk information for appropriate authenticaiton decisions i.e. allow/ challenge or deny a session - Secure your reset password flow - Prevent bulk fake account creations in your user store and for many similar use cases.","title":"Introduction"},{"location":"arkose/#setup","text":"","title":"Setup"},{"location":"arkose/#resources","text":"For information and setup help, see the following sections of the Arkose Labs documentation: Calling the Verify API","title":"Resources"},{"location":"arkose/#requirements","text":"To use the connector, you'll need: [Your Arkose Private Key] [Your company URL, if applicable] Please contact your account team, if you don't have these already.","title":"Requirements"},{"location":"arkose/#setting-up-the-connector","text":"In the DaVinci platform, add an * Arkose connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"arkose/#connector-settings","text":"Once you have added the Arkose connection, select the connector in the flow studio and edit the connection to update the General settings.","title":"Connector settings"},{"location":"arkose/#company","text":"Provide your company name as it appears on your Arkose Verify URL subdomain","title":"Company"},{"location":"arkose/#private-key","text":"Provide your Arkose private key for this flow here","title":"Private Key"},{"location":"arkose/#capabilities","text":"","title":"Capabilities"},{"location":"arkose/#verify","text":"This capability is used verify the Arkose token and optionally send log data to Arkose","title":"Verify"},{"location":"arkose/#properties","text":"","title":"Properties"},{"location":"arkose/#private-key_1","text":"The Arkose token will be mapped from the previous HTML connection. The value can be mapped as {{local. .payload.output.arkoseToken}} where connectionID is the identifier of the HTML connection that presents the login form to the user in the DaVinci flow.","title":"Private Key"},{"location":"arkose/#http-method","text":"Use the GET HTTP method to fetch the Verify API response for the current session or POST method to provide optional log data to Arkose Labs, while fetching the API response. The log data is a freeform string that allows information to be passed to the Verify API. This can be used to pass basic information that you want stored by Arkose with the session data. This can be used internally by Arkose when performing manual traffic analysis.","title":"HTTP Method"},{"location":"arkose/#connector-response","text":"The connector returns a status code and a raw response object when successful. The fields values from the response object can be individually mapped to downstream connectors to drive the user flows.","title":"Connector Response"},{"location":"arkose/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases. The connector will require the Arkose session token as an input. The session token will be generated client side upon interaction with the user, for instance, on a login page. In order to generate the the Arkose session token, you can use the HTTP connection as follows: 1. Add the HTTP connection and choose the Custom HTML Template Action from the list. 2. Add the 'username pasword form' under the HTML template. You can choose 'data-skcomponent' class to use the default Ping DaVinci form components. 3. Add a hidden div tag to the HTML template. This div tag will include the primary form submit button, which is hidden to prevent default form submit. This tag will also include the Arkose token data component. 4. The HTML template will include an additional submit button (not hidden) which will be used to trigger the Arkose enforcement challenge. 5. Use the Script template to embed the Arkose javacript on the login form. The script will also override the form's default submit action. 6. A callback will be defined to setup and initiate the Arkose session and challenge. Once the challenge is completed, the Arkose session token value will be set in the hidden data component and the form will be submitted to proceed to the next step. For more details on setting up the callback function, please refer to Arkose Client Side Setup Some example use cases are as follows:","title":"Using the connector in a flow"},{"location":"arkose/#authenticating-a-user","text":"The Arkose session token that is generated as part of user credentials submission is verified by the Arkose connector. The connector response can be used in the authentication flow to make authentication decisions and allow/ challenge or deny a user access based on the Arkose risk category for a given session.","title":"Authenticating a user"},{"location":"arkose/#registering-a-user","text":"The Arkose session token that is generated as part of user sign up process is verified by the Arkose connector. The connector response can be used in the registration flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session.","title":"Registering a user"},{"location":"arkose/#resetting-a-users-password","text":"The Arkose session token that is generated as part of password reset process is verified by the Arkose connector. The connector response can be used in the password reset flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session.","title":"Resetting a user's password"},{"location":"arkose/#capabilities_1","text":"","title":"Capabilities"},{"location":"arkose/#verify-verify","text":"This capability is used verify the Arkose token and optionally send log data to Arkose","title":"Verify (verify)"},{"location":"arkose/#session-token-textfield","text":"The Arkose session token that is generated on the HTML form (client side setup)","title":"Session Token textField"},{"location":"arkose/#http-method-dropdown","text":"HTTP Method to be used to verify Arkose session GET POST","title":"HTTP Method dropDown"},{"location":"arkose/#log-data-textfield","text":"Information to be passed to Arkose along with session data to be used for manual traffic analysis","title":"Log Data textField"},{"location":"arkose/#troubleshooting","text":"If the connector returns a 400 - bad request as a response, ensure that the Arkose token is correctly mapped as an input to the connector.","title":"Troubleshooting"},{"location":"aws-dynamodb/","text":"Examples of completed connector documentation: \u00b6 https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html Template Simple Connector \u00b6 Doc draft \u00b6 Author: Introduction \u00b6 [Describe the product. List the main use cases the connector supports.] Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the [service name] documentation: [Link to resources from the service documentation \u00b6 Requirements \u00b6 To use the connector, you'll need: [List pre-requisites] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 [List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .] Using the connector in a flow \u00b6 [Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as: [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] Capabilities \u00b6 Leave this section blank: it will be generated automatically Troubleshooting \u00b6 [Optional section] Common solutions \u00b6 [Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.] Troubleshooting resources \u00b6 [Resource description] \u00b6 [Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.] Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities . Limitations \u00b6 [Optional section] [Describe any issues or limitations.]","title":"Index"},{"location":"aws-dynamodb/#examples-of-completed-connector-documentation","text":"https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html","title":"Examples of completed connector documentation:"},{"location":"aws-dynamodb/#template-simple-connector","text":"","title":"Template Simple Connector"},{"location":"aws-dynamodb/#doc-draft","text":"Author:","title":"Doc draft"},{"location":"aws-dynamodb/#introduction","text":"[Describe the product. List the main use cases the connector supports.]","title":"Introduction"},{"location":"aws-dynamodb/#setup","text":"","title":"Setup"},{"location":"aws-dynamodb/#resources","text":"For information and setup help, see the following sections of the [service name] documentation:","title":"Resources"},{"location":"aws-dynamodb/#link-to-resources-from-the-service-documentation","text":"","title":"[Link to resources from the service documentation"},{"location":"aws-dynamodb/#requirements","text":"To use the connector, you'll need: [List pre-requisites]","title":"Requirements"},{"location":"aws-dynamodb/#task-name","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"aws-dynamodb/#task-name_1","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"aws-dynamodb/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"aws-dynamodb/#connector-settings","text":"[List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .]","title":"Connector settings"},{"location":"aws-dynamodb/#using-the-connector-in-a-flow","text":"[Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"aws-dynamodb/#use-case","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"aws-dynamodb/#use-case_1","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"aws-dynamodb/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"aws-dynamodb/#troubleshooting","text":"[Optional section]","title":"Troubleshooting"},{"location":"aws-dynamodb/#common-solutions","text":"[Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.]","title":"Common solutions"},{"location":"aws-dynamodb/#troubleshooting-resources","text":"","title":"Troubleshooting resources"},{"location":"aws-dynamodb/#resource-description","text":"[Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.]","title":"[Resource description]"},{"location":"aws-dynamodb/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"aws-dynamodb/#limitations","text":"[Optional section] [Describe any issues or limitations.]","title":"Limitations"},{"location":"aws-lambda/","text":"AWS Lambda Connector \u00b6 Doc draft \u00b6 Author: Introduction \u00b6 AWS Lambda connector can be used to invoke a Lambda function from Ping Connector. This connector allows you to: Invoking a Lambda function from Ping Connector Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the AWS Lambda connector API documentation: Invoke a Lambda function Requirements \u00b6 To use the connector, you'll need: Access Key Secret Key AWS Region Setting up the connector \u00b6 In Davinci, add a AWS Lambda Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection . Connector Settings \u00b6 Once you've added the AWS Lambda Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter the Lambda function name Lambda function name and click apply. This ensures that whenever you use this connector you will not have to reenter this information is used for generated Token passed as input to Authorise below connector in flow. Using the connector in a flow \u00b6 Invoking a Lambda function \u00b6 To invoke a Lambda function add a AWS Lambda Connector in the flow studio. Then choose the AWS Lambda capability. Provide the parameters from previous nodes in the flow (HTML form) to invoke a Lambda function. Capabilities \u00b6 AWS Lambda Invocation (AWSLambdaInvocation) \u00b6 Capability to Invoke AWS Lambda Lambda Function Name textField \u00b6 AWS Lambda Function Name to Invoke Limitations \u00b6 Use of connector is limited to function name of AWS Lambda API and account access.","title":"AWS Lambda Connector"},{"location":"aws-lambda/#aws-lambda-connector","text":"","title":"AWS Lambda Connector"},{"location":"aws-lambda/#doc-draft","text":"Author:","title":"Doc draft"},{"location":"aws-lambda/#introduction","text":"AWS Lambda connector can be used to invoke a Lambda function from Ping Connector. This connector allows you to: Invoking a Lambda function from Ping Connector","title":"Introduction"},{"location":"aws-lambda/#setup","text":"","title":"Setup"},{"location":"aws-lambda/#resources","text":"For information and setup help, see the following sections of the AWS Lambda connector API documentation: Invoke a Lambda function","title":"Resources"},{"location":"aws-lambda/#requirements","text":"To use the connector, you'll need: Access Key Secret Key AWS Region","title":"Requirements"},{"location":"aws-lambda/#setting-up-the-connector","text":"In Davinci, add a AWS Lambda Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"aws-lambda/#connector-settings","text":"Once you've added the AWS Lambda Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter the Lambda function name Lambda function name and click apply. This ensures that whenever you use this connector you will not have to reenter this information is used for generated Token passed as input to Authorise below connector in flow.","title":"Connector Settings"},{"location":"aws-lambda/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"aws-lambda/#invoking-a-lambda-function","text":"To invoke a Lambda function add a AWS Lambda Connector in the flow studio. Then choose the AWS Lambda capability. Provide the parameters from previous nodes in the flow (HTML form) to invoke a Lambda function.","title":"Invoking a Lambda function"},{"location":"aws-lambda/#capabilities","text":"","title":"Capabilities"},{"location":"aws-lambda/#aws-lambda-invocation-awslambdainvocation","text":"Capability to Invoke AWS Lambda","title":"AWS Lambda Invocation (AWSLambdaInvocation)"},{"location":"aws-lambda/#lambda-function-name-textfield","text":"AWS Lambda Function Name to Invoke","title":"Lambda Function Name textField"},{"location":"aws-lambda/#limitations","text":"Use of connector is limited to function name of AWS Lambda API and account access.","title":"Limitations"},{"location":"aws-s3/","text":"Amazon S3 Connector \u00b6 Doc draft \u00b6 Author: Scott Banducci (scottbanducci@pingidentity.com) Introduction \u00b6 Amazon S3 or Amazon Simple Storage Service is a service offered by Amazon Web Services that provides object storage through a web service interface. Amazon S3 uses the same scalable storage infrastructure that Amazon.com uses to run its e-commerce network. The Amazon S3 Connector enables you to: Create a Bucket Delete a Bucket Store Object Get an Object from a Bucket Delete an Object Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Amazon documentation: Amazon S3 API Reference Amazon SDK documentation Requirements \u00b6 To use the connector, you'll need: An Amazon S3 Account Your S3 Account 'Access ID' and 'Secret Access Key' these can be found by clicking the account username (in the top right of your S3 homepage) -> Security Credentials -> Access Keys The 'AWS Region' you are going to be using Setting up the connector \u00b6 In Davinci, add a Amazon S3 connection via the \"Connections\" tab. For help, see Adding a connection . Connector settings \u00b6 Once you've added the connection click on its logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and \"Edit\". You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) AWS Access Key 2) AWS Secret Access Key 3) AWS Region and click apply. This ensures that whenever you use this connector in a flow you will not have to reenter enter this information. Using the connector in a flow \u00b6 The Amazon S3 connector allows you to Create and Delete Buckets . Also to Store(Put), Get and Delete an object from a bucket . First, add the Amazon S3 connector via the \"Connections\" tab (remember to setup your Access tokens and AWS region). In the Davinci Flow Studio add an Amazon S3 connector. Then choose the capability you'd like to use it for. You will then need to select the parameters from previous nodes in the flow (ex. an HTML form) to populate the fields. Creating/Deleting a Bucket \u00b6 Simply add the node to your flow and select the Create Bucket or Delete Bucket capability. The only required field for this capability is the Bucket Name you wish to create or delete. You can use an HTML form or other input method (ex. a Get request that outputs the Bucket Name) earlier in the flow and click the node's \"{}\" parameters button to use that input as the Bucket Name. Store Object (putObject) \u00b6 If you'd like to store an object to an Amazon S3 bucket, it must first be uploaded in your flow. NOTE: S3 requires that all the object be in a buffer, file stream or similar binary form (see documentation) for any putObject call. This connector assumes that any Object uploaded into the flow is Base64 encoded when it is passed to Davinci's Amazon S3 connector. If you do not use the method below you must make your own Make Rest API capability found in the HTTP connector for an upload and make sure you pass the connector a Base64 encoded object. Preferred method of file upload: you can use the Davinci HTTP connector -> \"Custom HTML Template\" capability. In the \"HTML Template\" field, you must use a form tag Use : * an existing Bucket name, * a new and unique Key, * the object previously uploaded using \"skinputfile\" technique above when using Your object will be stored in the given Bucket with the given Key. Get Object \u00b6 Simply pass the connector: * the Bucket name * and Key of the object you are trying to retrieve and it will be returned in the response's Body which is accessible later in the flow via the \"objectData\" output in the Amazon S3 'Get Object' node. The object will be downloaded as a file without any extension. Delete Object \u00b6 Simply pass the Amazon S3 'Delete Object' node the Bucket name, Key, and (optional)Version ID of the object you want to delete. The response will come back with code 204 and No Content. Capabilities \u00b6 Troubleshooting \u00b6 NOTE: dealing with the putObject upload restrictions can be difficult. It is highly recommended you use the technique described above. NOTE: putObject will return Data: {ETag: \"###########################\"}. This ETag number can be used to locate your object. NOTE: Delete Bucket and Delete Object will return empty, status 204 responses. Limitations \u00b6 This connector has limited capabilities compared to the full extent of the Amazon S3 SDK. If you'd like to see more capabilities added or have other suggestions, please let your Ping contact know.","title":"Amazon S3 Connector"},{"location":"aws-s3/#amazon-s3-connector","text":"","title":"Amazon S3 Connector"},{"location":"aws-s3/#doc-draft","text":"Author: Scott Banducci (scottbanducci@pingidentity.com)","title":"Doc draft"},{"location":"aws-s3/#introduction","text":"Amazon S3 or Amazon Simple Storage Service is a service offered by Amazon Web Services that provides object storage through a web service interface. Amazon S3 uses the same scalable storage infrastructure that Amazon.com uses to run its e-commerce network. The Amazon S3 Connector enables you to: Create a Bucket Delete a Bucket Store Object Get an Object from a Bucket Delete an Object","title":"Introduction"},{"location":"aws-s3/#setup","text":"","title":"Setup"},{"location":"aws-s3/#resources","text":"For information and setup help, see the following sections of the Amazon documentation: Amazon S3 API Reference Amazon SDK documentation","title":"Resources"},{"location":"aws-s3/#requirements","text":"To use the connector, you'll need: An Amazon S3 Account Your S3 Account 'Access ID' and 'Secret Access Key' these can be found by clicking the account username (in the top right of your S3 homepage) -> Security Credentials -> Access Keys The 'AWS Region' you are going to be using","title":"Requirements"},{"location":"aws-s3/#setting-up-the-connector","text":"In Davinci, add a Amazon S3 connection via the \"Connections\" tab. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"aws-s3/#connector-settings","text":"Once you've added the connection click on its logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and \"Edit\". You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) AWS Access Key 2) AWS Secret Access Key 3) AWS Region and click apply. This ensures that whenever you use this connector in a flow you will not have to reenter enter this information.","title":"Connector settings"},{"location":"aws-s3/#using-the-connector-in-a-flow","text":"The Amazon S3 connector allows you to Create and Delete Buckets . Also to Store(Put), Get and Delete an object from a bucket . First, add the Amazon S3 connector via the \"Connections\" tab (remember to setup your Access tokens and AWS region). In the Davinci Flow Studio add an Amazon S3 connector. Then choose the capability you'd like to use it for. You will then need to select the parameters from previous nodes in the flow (ex. an HTML form) to populate the fields.","title":"Using the connector in a flow"},{"location":"aws-s3/#creatingdeleting-a-bucket","text":"Simply add the node to your flow and select the Create Bucket or Delete Bucket capability. The only required field for this capability is the Bucket Name you wish to create or delete. You can use an HTML form or other input method (ex. a Get request that outputs the Bucket Name) earlier in the flow and click the node's \"{}\" parameters button to use that input as the Bucket Name.","title":"Creating/Deleting a Bucket"},{"location":"aws-s3/#store-object-putobject","text":"If you'd like to store an object to an Amazon S3 bucket, it must first be uploaded in your flow. NOTE: S3 requires that all the object be in a buffer, file stream or similar binary form (see documentation) for any putObject call. This connector assumes that any Object uploaded into the flow is Base64 encoded when it is passed to Davinci's Amazon S3 connector. If you do not use the method below you must make your own Make Rest API capability found in the HTTP connector for an upload and make sure you pass the connector a Base64 encoded object. Preferred method of file upload: you can use the Davinci HTTP connector -> \"Custom HTML Template\" capability. In the \"HTML Template\" field, you must use a form tag Use : * an existing Bucket name, * a new and unique Key, * the object previously uploaded using \"skinputfile\" technique above when using Your object will be stored in the given Bucket with the given Key.","title":"Store Object (putObject)"},{"location":"aws-s3/#get-object","text":"Simply pass the connector: * the Bucket name * and Key of the object you are trying to retrieve and it will be returned in the response's Body which is accessible later in the flow via the \"objectData\" output in the Amazon S3 'Get Object' node. The object will be downloaded as a file without any extension.","title":"Get Object"},{"location":"aws-s3/#delete-object","text":"Simply pass the Amazon S3 'Delete Object' node the Bucket name, Key, and (optional)Version ID of the object you want to delete. The response will come back with code 204 and No Content.","title":"Delete Object"},{"location":"aws-s3/#capabilities","text":"","title":"Capabilities"},{"location":"aws-s3/#troubleshooting","text":"NOTE: dealing with the putObject upload restrictions can be difficult. It is highly recommended you use the technique described above. NOTE: putObject will return Data: {ETag: \"###########################\"}. This ETag number can be used to locate your object. NOTE: Delete Bucket and Delete Object will return empty, status 204 responses.","title":"Troubleshooting"},{"location":"aws-s3/#limitations","text":"This connector has limited capabilities compared to the full extent of the Amazon S3 SDK. If you'd like to see more capabilities added or have other suggestions, please let your Ping contact know.","title":"Limitations"},{"location":"aws-secrets-manager/","text":"Examples of completed connector documentation: \u00b6 https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html Template Simple Connector \u00b6 Doc draft \u00b6 Author: Introduction \u00b6 [Describe the product. List the main use cases the connector supports.] Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the [service name] documentation: [Link to resources from the service documentation \u00b6 Requirements \u00b6 To use the connector, you'll need: [List pre-requisites] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 [List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .] Using the connector in a flow \u00b6 [Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as: [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] Capabilities \u00b6 Leave this section blank: it will be generated automatically Troubleshooting \u00b6 [Optional section] Common solutions \u00b6 [Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.] Troubleshooting resources \u00b6 [Resource description] \u00b6 [Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.] Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities . Limitations \u00b6 [Optional section] [Describe any issues or limitations.]","title":"Index"},{"location":"aws-secrets-manager/#examples-of-completed-connector-documentation","text":"https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html","title":"Examples of completed connector documentation:"},{"location":"aws-secrets-manager/#template-simple-connector","text":"","title":"Template Simple Connector"},{"location":"aws-secrets-manager/#doc-draft","text":"Author:","title":"Doc draft"},{"location":"aws-secrets-manager/#introduction","text":"[Describe the product. List the main use cases the connector supports.]","title":"Introduction"},{"location":"aws-secrets-manager/#setup","text":"","title":"Setup"},{"location":"aws-secrets-manager/#resources","text":"For information and setup help, see the following sections of the [service name] documentation:","title":"Resources"},{"location":"aws-secrets-manager/#link-to-resources-from-the-service-documentation","text":"","title":"[Link to resources from the service documentation"},{"location":"aws-secrets-manager/#requirements","text":"To use the connector, you'll need: [List pre-requisites]","title":"Requirements"},{"location":"aws-secrets-manager/#task-name","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"aws-secrets-manager/#task-name_1","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"aws-secrets-manager/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"aws-secrets-manager/#connector-settings","text":"[List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .]","title":"Connector settings"},{"location":"aws-secrets-manager/#using-the-connector-in-a-flow","text":"[Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"aws-secrets-manager/#use-case","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"aws-secrets-manager/#use-case_1","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"aws-secrets-manager/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"aws-secrets-manager/#troubleshooting","text":"[Optional section]","title":"Troubleshooting"},{"location":"aws-secrets-manager/#common-solutions","text":"[Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.]","title":"Common solutions"},{"location":"aws-secrets-manager/#troubleshooting-resources","text":"","title":"Troubleshooting resources"},{"location":"aws-secrets-manager/#resource-description","text":"[Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.]","title":"[Resource description]"},{"location":"aws-secrets-manager/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"aws-secrets-manager/#limitations","text":"[Optional section] [Describe any issues or limitations.]","title":"Limitations"},{"location":"beyondidentity/","text":"Beyond Identity Connector \u00b6 Author: Suresh Bhandarkar Introduction \u00b6 Beyond Identity is fundamentally changing how the world logs in with a groundbreaking invisible, un-phishable MFA platform that provides the most secure and frictionless authentication on the planet. We stop ransomware and account takeover attacks in their tracks and dramatically improve the user experience. Beyond Identity\u2019s state-of-the-art platform eliminates passwords and other phishable factors, enabling organizations to confidently validate users\u2019 identities. The solution ensures users log in from authorized devices, and that the device meets the security policy requirements during login and continuously after that. Our revolutionary approach empowers zero trust by cryptographically binding the user\u2019s identity to their device and analyzing hundreds of risk signals on an ongoing basis. The company\u2019s advanced risk policy engine enables organizations to implement foundationally secure authentication and utilize risk signals for protection, rather than just for detection and response. For more information on why Intuit, Snowflake, and Roblox use Beyond Identity, please visit www.beyondidentity.com. Setup \u00b6 The Beyond Identity connector in PingOne DaVinci will perform an OIDC redirect to the Beyond Identity service for passwordless authentication and redirect back to PingOne DaVinci to continue the authentication flow. Use the following URLs to configure the Beyond Identity Connector in PingOne DaVinci. Issuer: https://auth.byndid.com/v2 Authorization: https://auth.byndid.com/v2/authorize Token: https://auth.byndid.com/v2/token Userinfo: https://auth.byndid.com/v2/userinfo JWKS: https://auth.byndid.com/v2/.well-known/jwks.json Scope: OpenID Client ID: You will receive this from Beyond Identity. Client Secret: You will receive this from Beyond Identity. Resources \u00b6 For information and setup help, see https://support.beyondidentity.com","title":"Beyond Identity Connector"},{"location":"beyondidentity/#beyond-identity-connector","text":"Author: Suresh Bhandarkar","title":"Beyond Identity Connector"},{"location":"beyondidentity/#introduction","text":"Beyond Identity is fundamentally changing how the world logs in with a groundbreaking invisible, un-phishable MFA platform that provides the most secure and frictionless authentication on the planet. We stop ransomware and account takeover attacks in their tracks and dramatically improve the user experience. Beyond Identity\u2019s state-of-the-art platform eliminates passwords and other phishable factors, enabling organizations to confidently validate users\u2019 identities. The solution ensures users log in from authorized devices, and that the device meets the security policy requirements during login and continuously after that. Our revolutionary approach empowers zero trust by cryptographically binding the user\u2019s identity to their device and analyzing hundreds of risk signals on an ongoing basis. The company\u2019s advanced risk policy engine enables organizations to implement foundationally secure authentication and utilize risk signals for protection, rather than just for detection and response. For more information on why Intuit, Snowflake, and Roblox use Beyond Identity, please visit www.beyondidentity.com.","title":"Introduction"},{"location":"beyondidentity/#setup","text":"The Beyond Identity connector in PingOne DaVinci will perform an OIDC redirect to the Beyond Identity service for passwordless authentication and redirect back to PingOne DaVinci to continue the authentication flow. Use the following URLs to configure the Beyond Identity Connector in PingOne DaVinci. Issuer: https://auth.byndid.com/v2 Authorization: https://auth.byndid.com/v2/authorize Token: https://auth.byndid.com/v2/token Userinfo: https://auth.byndid.com/v2/userinfo JWKS: https://auth.byndid.com/v2/.well-known/jwks.json Scope: OpenID Client ID: You will receive this from Beyond Identity. Client Secret: You will receive this from Beyond Identity.","title":"Setup"},{"location":"beyondidentity/#resources","text":"For information and setup help, see https://support.beyondidentity.com","title":"Resources"},{"location":"circleaccess/","text":"Circle Access Connector \u00b6 Author: Circle Systems Introduction \u00b6 The Circle Access connector provides user authentication through the Circle Access Service and provides the user session information, as well as the hash of emails, that can be used by other connectors for user control and validation. Setup \u00b6 Before setting up the connector \u00b6 Please visit https://console.gocircle.ai/ to register the application. Click on the [Add New] and fill in the fields. Here we used Circle Ping Demo as an example: To get the Login Return URL , follow the steps: click on Connections ( left menu ) on the Ping Identity page. click on the [ New Connection ] button and add the Circle Access Connector click on the conector and the Redirect URL will be shown Using the connector in a flow \u00b6 After adding the connector to the flow, some fields need to be configured. Click on the connector to configure these fields: We have to go back to https://console.gocircle.ai/ to get the field values (click on the App info icon - the first icon) Use cases \u00b6 A common use case is to enable credential-free authentication for your current end users. This allows your end users to access your Web application and/or server from any public (or private) computer and browser while eliminating any possibility of the user's credentials being stolen or hijacked. The user authenticates by scanning a QR code on their smartphone, with no need to type in any information. Another popular use case is to enable easy and fast log-in for users that are already registered. In this case, the user has registered their email with you, so you just need to get the hash of your current user and compare it with the hashes returned from the Circle Access connector. For new users, Circle Access allows rapid and secure sign-ups, as the hash of the email is always available after the QrCode scan. This means that you can just request the email once and use the login scan to confirm it, without the need to send information or requests to the user's email. Once confirmed, you just save the information and let the user in. This method is secure on any public (or private) computer and browser because - even if the computer is compromised - the only information that is exposed is the user email, while the hashes and session information are delivered securely and directly to your connector. Capabilities \u00b6 Authentication (initializeAuthorizationRequest) \u00b6 Authentication using Circle Access App Key textField \u00b6 App Key Read Key textField \u00b6 Read Key Write Key textField \u00b6 Write key Login Url textField \u00b6 The URL of your Circle Access login","title":"Circle Access Connector"},{"location":"circleaccess/#circle-access-connector","text":"Author: Circle Systems","title":"Circle Access Connector"},{"location":"circleaccess/#introduction","text":"The Circle Access connector provides user authentication through the Circle Access Service and provides the user session information, as well as the hash of emails, that can be used by other connectors for user control and validation.","title":"Introduction"},{"location":"circleaccess/#setup","text":"","title":"Setup"},{"location":"circleaccess/#before-setting-up-the-connector","text":"Please visit https://console.gocircle.ai/ to register the application. Click on the [Add New] and fill in the fields. Here we used Circle Ping Demo as an example: To get the Login Return URL , follow the steps: click on Connections ( left menu ) on the Ping Identity page. click on the [ New Connection ] button and add the Circle Access Connector click on the conector and the Redirect URL will be shown","title":"Before setting up the connector"},{"location":"circleaccess/#using-the-connector-in-a-flow","text":"After adding the connector to the flow, some fields need to be configured. Click on the connector to configure these fields: We have to go back to https://console.gocircle.ai/ to get the field values (click on the App info icon - the first icon)","title":"Using the connector in a flow"},{"location":"circleaccess/#use-cases","text":"A common use case is to enable credential-free authentication for your current end users. This allows your end users to access your Web application and/or server from any public (or private) computer and browser while eliminating any possibility of the user's credentials being stolen or hijacked. The user authenticates by scanning a QR code on their smartphone, with no need to type in any information. Another popular use case is to enable easy and fast log-in for users that are already registered. In this case, the user has registered their email with you, so you just need to get the hash of your current user and compare it with the hashes returned from the Circle Access connector. For new users, Circle Access allows rapid and secure sign-ups, as the hash of the email is always available after the QrCode scan. This means that you can just request the email once and use the login scan to confirm it, without the need to send information or requests to the user's email. Once confirmed, you just save the information and let the user in. This method is secure on any public (or private) computer and browser because - even if the computer is compromised - the only information that is exposed is the user email, while the hashes and session information are delivered securely and directly to your connector.","title":"Use cases"},{"location":"circleaccess/#capabilities","text":"","title":"Capabilities"},{"location":"circleaccess/#authentication-initializeauthorizationrequest","text":"Authentication using Circle Access","title":"Authentication (initializeAuthorizationRequest)"},{"location":"circleaccess/#app-key-textfield","text":"App Key","title":"App Key textField"},{"location":"circleaccess/#read-key-textfield","text":"Read Key","title":"Read Key textField"},{"location":"circleaccess/#write-key-textfield","text":"Write key","title":"Write Key textField"},{"location":"circleaccess/#login-url-textfield","text":"The URL of your Circle Access login","title":"Login Url textField"},{"location":"clear/","text":"CLEAR Connector \u00b6 Author: CLEAR Introduction \u00b6 The CLEAR Web Verification technology solution offers a seamless way for partners to integrate with our products in order to verify a user's identity to unlock the desired experience. There are three primary phases to a transaction when using CLEAR's Web Verification solution. These phases are: 1. Authentication - User verification and consent to share data 2. Token Service - Retrieval of OAuth and OIDC compliant tokens that establish the member identity 3. Data Sharing - Request for member data and the subsequent response payload CLEAR's solution allows both new users and returning CLEAR users to easily verify their identity. The CLEAR Web Verification flow is designed to allow easy and secure mobile browser authentication and authorization to share user consented information with a partner. As part of our standard terms and conditions, CLEAR will always obtain express consent from a member whenever that member is preparing to share their personal information with one of CLEAR's partners for the first time This connector is to perform above listed three phases by redirecting to CLEAR's Web Verification web app invoked via OpenID Connect (OIDC) and return back to the connector. Setup \u00b6 Requirements \u00b6 To use the connector, you'll need: CLEAR PIE Environment Partner Onboard CLEAR provides both a Partner Integration Environment (referenced as PIE, CLEAR's Sandbox) for development and a Production Environment. In order for partners to integrate with CLEAR's Web Verification solution, the partner needs to first define the assurance rule(s) and the data elements required for the use case. At the time of onboarding, the partner needs to provide the redirectURI(s) where the user would be redirected to after exiting verification Assurance Rules Identity assurance is a measure/level of how strong the identity assertion is required for the use case. Data Elements Data elements are the member identity attributes such as first name, family name, age verification, address, etc. The user attributes that are shared after a successful verification, and are defined by the partner which may require security and legal approval depending on the requested elements RedirectURI Following the OAuth specification, after the user has completed authentication/verification, the user is directed to the redirectURI. This allows the user to continue downstream interactions after the verification Once the assurance rules and data elements are defined, and redirectURI is provided by the partner, CLEAR can begin onboarding the partner into the Partner Integration Environment (PIE). Setting up the connector \u00b6 In Davinci, add a CLEAR connection. For help, see Adding a connection . The partner is supplied with below connector settings as part of the PIE provisioning Connector settings \u00b6 Redirect URL The unique redirect uri is auto-generated by Davinci and assigned to this connector when it is created. It needs to be registered with CLEAR inside partner onboarding process. When the verification of user is completed, CLEAR will direct user to this location. This allows the user to continue downstream interactions after the verification. In addition, after a successful verification, an authorization code is generated and appended to the redirectURI by CLEAR. Client ID The unique public identifier of the partner application provided by CLEAR during the onboarding process. Client Secret The cryptographic secret provided to the partner application provided by CLEAR during the onboarding process. State A string value defined by the partner, the same value is returned as a parameter with the redirectURI allowing the partner to validate and identify the session. Scope Generated from creation of use case during partner onboarding. The list of data items to be returned to the partner through server-to-server exchange, this list is presented to the user in the consent screen. Use Case Same as Client ID . This is a partner use-case that satisfy assurance level, data elements and the redirect uri requirements with CLEAR engagement. Response Type CLEAR provided. Default OAuth response_type is \u201ccode\u201d. Token Endpoint A POST API call to CLEAR with the authorization code (After a user successfully verifies and consents to sharing data with a partner, CLEAR will generate an \u201cAuthorization Code\u201d and pass it back to the partner via a callback URL or redirectURI of the connector) received by the connector in order to obtain an ID/Access/Refresh token Userinfo Endpoint A GET API call to CLEAR with the API Key , \" preferred_username \" (can be extracted from the ID/Access token; thereafter, it can be included in the API call) and the Access Token in order to retrieve member attributes that were defined as part of the OAuth scope (during onboarding). API Key CLEAR provided. A backend API key used in retrieving member data from CLEAR Logout Endpoint A POST API call to CLEAR with the Access Token in order to invalidate user session held by CLEAR. Redirect to Partner URI The location of the page, partner wish the connector direct the user to when the verification session completes with failure. Using the connector in a flow \u00b6 You can use CLEAR connector as starting point or create your own flows to satisfy your requirements. The following section shows a sample flow Verify user Identity and display data elements \u00b6 Use this flow to initiate web verification and display the user data elements Create a new connection by selecting CLEAR connector from the Connections menu. Fill all the properties provided by CLEAR and save. The Redirect URI should be auto generated by Davinci after save. Share the Redirect URI with CLEAR to be configured in a partner use case. Use this connector inside the Flow Studio. Add a HTTP connector to CLEAR connector for All Triggers True. Use Custom HTML Message capability on HTTP Connector to display all the data elements like Given Name, Family Name, Address, Birthdate, Driving License and others returned by CLEAR Connector for a successful verification of user Identity. Perform Save > Deploy > Try Flow to tes this flow. Capabilities \u00b6 Redirect to CLEAR \u00b6 Redirect user to CLEAR URL textField \u00b6 The Auth URL of the 3rd party service Verify with CLEAR button \u00b6 showPoweredBy toggleSwitch \u00b6 skipButtonPress toggleSwitch \u00b6 Troubleshooting \u00b6 The following resources can help you solve issues with the CLEAR connector. Verify that all of the following elements were defined correctly when you initially created and configured the connector: Client ID Client Secret State Scope Use Case Response Type Token Endpoint Userinfo Endpoint API Key Logout Endpoint Redirect to Partner URI Common solutions \u00b6 For each connector in the flow, make sure that all of the mandatory inputs have been provided Use the Analytics feature to see where the flow stopped Select the Options icon, and turn on Show Node ID. This will make it easier to identify the source of inputs and outputs. Troubleshooting resources \u00b6 Audit \u00b6 You can use the audit log to identify potential issues. For more information, see Audit . Testing capabilities \u00b6 Testing your flows frequently is the key to making them work correctly. For more information, see Getting Started with DaVinci","title":"CLEAR Connector"},{"location":"clear/#clear-connector","text":"Author: CLEAR","title":"CLEAR Connector"},{"location":"clear/#introduction","text":"The CLEAR Web Verification technology solution offers a seamless way for partners to integrate with our products in order to verify a user's identity to unlock the desired experience. There are three primary phases to a transaction when using CLEAR's Web Verification solution. These phases are: 1. Authentication - User verification and consent to share data 2. Token Service - Retrieval of OAuth and OIDC compliant tokens that establish the member identity 3. Data Sharing - Request for member data and the subsequent response payload CLEAR's solution allows both new users and returning CLEAR users to easily verify their identity. The CLEAR Web Verification flow is designed to allow easy and secure mobile browser authentication and authorization to share user consented information with a partner. As part of our standard terms and conditions, CLEAR will always obtain express consent from a member whenever that member is preparing to share their personal information with one of CLEAR's partners for the first time This connector is to perform above listed three phases by redirecting to CLEAR's Web Verification web app invoked via OpenID Connect (OIDC) and return back to the connector.","title":"Introduction"},{"location":"clear/#setup","text":"","title":"Setup"},{"location":"clear/#requirements","text":"To use the connector, you'll need: CLEAR PIE Environment Partner Onboard CLEAR provides both a Partner Integration Environment (referenced as PIE, CLEAR's Sandbox) for development and a Production Environment. In order for partners to integrate with CLEAR's Web Verification solution, the partner needs to first define the assurance rule(s) and the data elements required for the use case. At the time of onboarding, the partner needs to provide the redirectURI(s) where the user would be redirected to after exiting verification Assurance Rules Identity assurance is a measure/level of how strong the identity assertion is required for the use case. Data Elements Data elements are the member identity attributes such as first name, family name, age verification, address, etc. The user attributes that are shared after a successful verification, and are defined by the partner which may require security and legal approval depending on the requested elements RedirectURI Following the OAuth specification, after the user has completed authentication/verification, the user is directed to the redirectURI. This allows the user to continue downstream interactions after the verification Once the assurance rules and data elements are defined, and redirectURI is provided by the partner, CLEAR can begin onboarding the partner into the Partner Integration Environment (PIE).","title":"Requirements"},{"location":"clear/#setting-up-the-connector","text":"In Davinci, add a CLEAR connection. For help, see Adding a connection . The partner is supplied with below connector settings as part of the PIE provisioning","title":"Setting up the connector"},{"location":"clear/#connector-settings","text":"Redirect URL The unique redirect uri is auto-generated by Davinci and assigned to this connector when it is created. It needs to be registered with CLEAR inside partner onboarding process. When the verification of user is completed, CLEAR will direct user to this location. This allows the user to continue downstream interactions after the verification. In addition, after a successful verification, an authorization code is generated and appended to the redirectURI by CLEAR. Client ID The unique public identifier of the partner application provided by CLEAR during the onboarding process. Client Secret The cryptographic secret provided to the partner application provided by CLEAR during the onboarding process. State A string value defined by the partner, the same value is returned as a parameter with the redirectURI allowing the partner to validate and identify the session. Scope Generated from creation of use case during partner onboarding. The list of data items to be returned to the partner through server-to-server exchange, this list is presented to the user in the consent screen. Use Case Same as Client ID . This is a partner use-case that satisfy assurance level, data elements and the redirect uri requirements with CLEAR engagement. Response Type CLEAR provided. Default OAuth response_type is \u201ccode\u201d. Token Endpoint A POST API call to CLEAR with the authorization code (After a user successfully verifies and consents to sharing data with a partner, CLEAR will generate an \u201cAuthorization Code\u201d and pass it back to the partner via a callback URL or redirectURI of the connector) received by the connector in order to obtain an ID/Access/Refresh token Userinfo Endpoint A GET API call to CLEAR with the API Key , \" preferred_username \" (can be extracted from the ID/Access token; thereafter, it can be included in the API call) and the Access Token in order to retrieve member attributes that were defined as part of the OAuth scope (during onboarding). API Key CLEAR provided. A backend API key used in retrieving member data from CLEAR Logout Endpoint A POST API call to CLEAR with the Access Token in order to invalidate user session held by CLEAR. Redirect to Partner URI The location of the page, partner wish the connector direct the user to when the verification session completes with failure.","title":"Connector settings"},{"location":"clear/#using-the-connector-in-a-flow","text":"You can use CLEAR connector as starting point or create your own flows to satisfy your requirements. The following section shows a sample flow","title":"Using the connector in a flow"},{"location":"clear/#verify-user-identity-and-display-data-elements","text":"Use this flow to initiate web verification and display the user data elements Create a new connection by selecting CLEAR connector from the Connections menu. Fill all the properties provided by CLEAR and save. The Redirect URI should be auto generated by Davinci after save. Share the Redirect URI with CLEAR to be configured in a partner use case. Use this connector inside the Flow Studio. Add a HTTP connector to CLEAR connector for All Triggers True. Use Custom HTML Message capability on HTTP Connector to display all the data elements like Given Name, Family Name, Address, Birthdate, Driving License and others returned by CLEAR Connector for a successful verification of user Identity. Perform Save > Deploy > Try Flow to tes this flow.","title":"Verify user Identity and display data elements"},{"location":"clear/#capabilities","text":"","title":"Capabilities"},{"location":"clear/#redirect-to-clear","text":"Redirect user to CLEAR","title":"Redirect to CLEAR"},{"location":"clear/#url-textfield","text":"The Auth URL of the 3rd party service","title":"URL textField"},{"location":"clear/#verify-with-clear-button","text":"","title":"Verify with CLEAR button"},{"location":"clear/#showpoweredby-toggleswitch","text":"","title":"showPoweredBy toggleSwitch"},{"location":"clear/#skipbuttonpress-toggleswitch","text":"","title":"skipButtonPress toggleSwitch"},{"location":"clear/#troubleshooting","text":"The following resources can help you solve issues with the CLEAR connector. Verify that all of the following elements were defined correctly when you initially created and configured the connector: Client ID Client Secret State Scope Use Case Response Type Token Endpoint Userinfo Endpoint API Key Logout Endpoint Redirect to Partner URI","title":"Troubleshooting"},{"location":"clear/#common-solutions","text":"For each connector in the flow, make sure that all of the mandatory inputs have been provided Use the Analytics feature to see where the flow stopped Select the Options icon, and turn on Show Node ID. This will make it easier to identify the source of inputs and outputs.","title":"Common solutions"},{"location":"clear/#troubleshooting-resources","text":"","title":"Troubleshooting resources"},{"location":"clear/#audit","text":"You can use the audit log to identify potential issues. For more information, see Audit .","title":"Audit"},{"location":"clear/#testing-capabilities","text":"Testing your flows frequently is the key to making them work correctly. For more information, see Getting Started with DaVinci","title":"Testing capabilities"},{"location":"clearbit/","text":"Clearbit Connector \u00b6 Author: Matthew Teets Introduction \u00b6 The Clearbit connector allows users to look up and return general information about a person/business. All capabilities and use cases revolve around gathering specific public information on an individual through their personal/business email address. The Clearbit connector comes with 3 capabilities that the user is able to start operating out of the box. Capabilities: \u00b6 Get All User Information Email Risk Score Make Custom API Call Setup \u00b6 Resources \u00b6 For information and additional help, see the following sections of the Clearbit API documentation: \u00b6 Clearbit API Documentation: Enrichment API Combined API Person API Email lookup Risk API DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector Requirements \u00b6 To use the Clearbit connector: \u00b6 You must first create an account with Clearbit. Create an account here You then must be able to locate and copy your account API Key. Access your account API key here Next it is wise to check if the your API version is still up to date. Check API version here Setting up the connector \u00b6 Clearbit Connector General Settings: \u00b6 Navigate to the Clearbit connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Clearbit). Select the Clearbit connector. Once the Clearbit connector has been added the Your Connections list, click on Clearbit. From here you will see two text fields labeled API Key, Person API Version, and Risk API Version. API Key : Copy and paste your Clearbit API key from the Clearbit API reference into the corresponding text field. Person API Version : This field will already be filled out. Only change this if the API version is out of date. Risk API Version : This field will already be filled out. Only change this if the API version is out of date. Click Apply Using the connector in a flow \u00b6 Some Clearbit connector use cases: \u00b6 Auto-fill registration forms. Obtain general information about an individual. Obtain information about a potential client's company. Obtain information about a competitors company. Verify the legitimacy of an email and IP address. If an email and IP address are suspicious initiate additional sign-on steps. Use Case - obtain general information about an individual: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Get All User Info capability. This Clearbit connector capability has a single capability level property that can be filled out 1 of 2 ways: Manually inserting the desired email into the text field. Selecting an appropriate output email variable from the previous connector. E.g. an HTTP connector with an HTML form that prompts the user to enter an email. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered output variables. Format, repeat, and add as many output variables as desired. Click apply In the upper right hand corner click Save, Deploy, and Run. Use Case - verify the legitimacy of an email and IP address: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Email Risk Score capability. This Clearbit connector capability has 3 capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired email, IP address, and full name into the text field. Selecting the appropriate output variables from a previous connector. E.g. an HTTP connector with an HTML form that prompts the user for the required info. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered output variables. Risk Output Variables: riskLevel riskScore riskReasons Format, repeat, and add as many output variables as desired. Click apply In the upper right hand corner click Save, Deploy, and Run. Use Case - obtain a formatted JSON object with all person data: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Clearbit connector capability has 6 capability level properties that can be manually filled out: Domain Name : Used to call a specific API within the Clearbit API. E.g. person, company, person-stream, company-stream. Endpoint : Used to call a specific operation from inside the Clearbit API. E.g. /combined/find?email=alex@clearbit.com. Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Query Parameters : The kye-value pairs that appear after the question mark in the URL. E.g. email=usename@mail.com, name=John Smith, company=PingIdentity . Headers : Key-value pairs that represent the meta-data associated with the Clearbit API request and response. E.g. Authorization: Bearer gk_5hid2f0b97d45d05add2b, Content-Type: application/json . Body : Used to manually craft a JSON request body for the Clearbit API. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run. Capabilities \u00b6 Leave this section blank: it will be generated automatically Limitations \u00b6 Clearbit doesn't have information on every email address. There will be instances where no information will be available from the Clearbit API. In this case Clearbit will return a 404 response status code. No need to worry because the Clearbit connector is fully equipped to gracefully handle these instances by simply returning empty person values.","title":"Clearbit Connector"},{"location":"clearbit/#clearbit-connector","text":"Author: Matthew Teets","title":"Clearbit Connector"},{"location":"clearbit/#introduction","text":"The Clearbit connector allows users to look up and return general information about a person/business. All capabilities and use cases revolve around gathering specific public information on an individual through their personal/business email address. The Clearbit connector comes with 3 capabilities that the user is able to start operating out of the box.","title":"Introduction"},{"location":"clearbit/#capabilities","text":"Get All User Information Email Risk Score Make Custom API Call","title":"Capabilities:"},{"location":"clearbit/#setup","text":"","title":"Setup"},{"location":"clearbit/#resources","text":"","title":"Resources"},{"location":"clearbit/#for-information-and-additional-help-see-the-following-sections-of-the-clearbit-api-documentation","text":"Clearbit API Documentation: Enrichment API Combined API Person API Email lookup Risk API DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector","title":"For information and additional help, see the following sections of the Clearbit API documentation:"},{"location":"clearbit/#requirements","text":"","title":"Requirements"},{"location":"clearbit/#to-use-the-clearbit-connector","text":"You must first create an account with Clearbit. Create an account here You then must be able to locate and copy your account API Key. Access your account API key here Next it is wise to check if the your API version is still up to date. Check API version here","title":"To use the Clearbit connector:"},{"location":"clearbit/#setting-up-the-connector","text":"","title":"Setting up the connector"},{"location":"clearbit/#clearbit-connector-general-settings","text":"Navigate to the Clearbit connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Clearbit). Select the Clearbit connector. Once the Clearbit connector has been added the Your Connections list, click on Clearbit. From here you will see two text fields labeled API Key, Person API Version, and Risk API Version. API Key : Copy and paste your Clearbit API key from the Clearbit API reference into the corresponding text field. Person API Version : This field will already be filled out. Only change this if the API version is out of date. Risk API Version : This field will already be filled out. Only change this if the API version is out of date. Click Apply","title":"Clearbit Connector General Settings:"},{"location":"clearbit/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"clearbit/#some-clearbit-connector-use-cases","text":"Auto-fill registration forms. Obtain general information about an individual. Obtain information about a potential client's company. Obtain information about a competitors company. Verify the legitimacy of an email and IP address. If an email and IP address are suspicious initiate additional sign-on steps.","title":"Some Clearbit connector use cases:"},{"location":"clearbit/#use-case-obtain-general-information-about-an-individual","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Get All User Info capability. This Clearbit connector capability has a single capability level property that can be filled out 1 of 2 ways: Manually inserting the desired email into the text field. Selecting an appropriate output email variable from the previous connector. E.g. an HTTP connector with an HTML form that prompts the user to enter an email. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered output variables. Format, repeat, and add as many output variables as desired. Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - obtain general information about an individual:"},{"location":"clearbit/#use-case-verify-the-legitimacy-of-an-email-and-ip-address","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Email Risk Score capability. This Clearbit connector capability has 3 capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired email, IP address, and full name into the text field. Selecting the appropriate output variables from a previous connector. E.g. an HTTP connector with an HTML form that prompts the user for the required info. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered output variables. Risk Output Variables: riskLevel riskScore riskReasons Format, repeat, and add as many output variables as desired. Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - verify the legitimacy of an email and IP address:"},{"location":"clearbit/#use-case-obtain-a-formatted-json-object-with-all-person-data","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Clearbit connector capability has 6 capability level properties that can be manually filled out: Domain Name : Used to call a specific API within the Clearbit API. E.g. person, company, person-stream, company-stream. Endpoint : Used to call a specific operation from inside the Clearbit API. E.g. /combined/find?email=alex@clearbit.com. Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Query Parameters : The kye-value pairs that appear after the question mark in the URL. E.g. email=usename@mail.com, name=John Smith, company=PingIdentity . Headers : Key-value pairs that represent the meta-data associated with the Clearbit API request and response. E.g. Authorization: Bearer gk_5hid2f0b97d45d05add2b, Content-Type: application/json . Body : Used to manually craft a JSON request body for the Clearbit API. The Clearbit connector does not generate any output on its own. To see the information retrieved by the Clearbit connector you can do the following: Add an HTTP block after your Clearbit connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Clearbit connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - obtain a formatted JSON object with all person data:"},{"location":"clearbit/#capabilities_1","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"clearbit/#limitations","text":"Clearbit doesn't have information on every email address. There will be instances where no information will be available from the Clearbit API. In this case Clearbit will return a 404 response status code. No need to worry because the Clearbit connector is fully equipped to gracefully handle these instances by simply returning empty person values.","title":"Limitations"},{"location":"cloudmailin/","text":"CloudMailin Connector \u00b6 Author: Terry Sigle terrysigle@pingidentity.com Introduction \u00b6 CloudMailin delivers your transactional email with confidence, security and transparency. Requirements \u00b6 To use the connector, you'll need: CloudMailin Username CloudMailin API Key Obtain CloudMailin Account \u00b6 Create or use an existing account with CloudMailin . Create an API Username and Key. Setting up the connector \u00b6 In Singular Key, add a CloudMailin Connector connection. For help, see Adding a connection . Connector settings \u00b6 In the connector details page, under the General tab, provide the following attributes and Apply . CloudMailin Username CloudMailin API Key Using the connector in a flow \u00b6 The typical use of this connector is within a flow when an email is to be sent as part of the running the flow. Use cases that this connector implements include: Sending an Email \u00b6 To send an email, add the CloudMailin connector as a node in a flow. Setting the connector variables (email, subject and to) will immediately send the email via the CloudMailin service. Capabilities \u00b6 Send Plain Text Email (sendPlainEmail) \u00b6 Send email with a subject and plain text email Email To textField \u00b6 Email Address (seperated by commas) to send To Email Subject textField \u00b6 Subject of the email Plain Text Body textField \u00b6 Plain text body of the email","title":"CloudMailin Connector"},{"location":"cloudmailin/#cloudmailin-connector","text":"Author: Terry Sigle terrysigle@pingidentity.com","title":"CloudMailin Connector"},{"location":"cloudmailin/#introduction","text":"CloudMailin delivers your transactional email with confidence, security and transparency.","title":"Introduction"},{"location":"cloudmailin/#requirements","text":"To use the connector, you'll need: CloudMailin Username CloudMailin API Key","title":"Requirements"},{"location":"cloudmailin/#obtain-cloudmailin-account","text":"Create or use an existing account with CloudMailin . Create an API Username and Key.","title":"Obtain CloudMailin Account"},{"location":"cloudmailin/#setting-up-the-connector","text":"In Singular Key, add a CloudMailin Connector connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"cloudmailin/#connector-settings","text":"In the connector details page, under the General tab, provide the following attributes and Apply . CloudMailin Username CloudMailin API Key","title":"Connector settings"},{"location":"cloudmailin/#using-the-connector-in-a-flow","text":"The typical use of this connector is within a flow when an email is to be sent as part of the running the flow. Use cases that this connector implements include:","title":"Using the connector in a flow"},{"location":"cloudmailin/#sending-an-email","text":"To send an email, add the CloudMailin connector as a node in a flow. Setting the connector variables (email, subject and to) will immediately send the email via the CloudMailin service.","title":"Sending an Email"},{"location":"cloudmailin/#capabilities","text":"","title":"Capabilities"},{"location":"cloudmailin/#send-plain-text-email-sendplainemail","text":"Send email with a subject and plain text email","title":"Send Plain Text Email (sendPlainEmail)"},{"location":"cloudmailin/#email-to-textfield","text":"Email Address (seperated by commas) to send To","title":"Email To textField"},{"location":"cloudmailin/#email-subject-textfield","text":"Subject of the email","title":"Email Subject textField"},{"location":"cloudmailin/#plain-text-body-textfield","text":"Plain text body of the email","title":"Plain Text Body textField"},{"location":"deduce/","text":"Deduce Intelligent MFA \u00b6 This guide details how to install and use the Deduce Intelligent MFA connector for your PingOne DaVinci flow. This no-code solution leverages our Deduce Identity Insights API and is configurable to more accurately determine when to present a challenge or trust a user at the moment of login. Requirements \u00b6 To set up the Deduce Intelligent MFA connector, you'll need the following: 1. Deduce Insights API Key 2. Deduce Insights Site ID Integrate & Setup in Flow Studio \u00b6 Select Add Integration (using the \"+\" symbol) at the bottom left corner of the Flow Studio. With the connector present in the workflow, click on the Deduce step and select the blue pencil icon at the top of the panel. This is where you will input your API Key and Site ID (required) for making requests to the Deduce Insights endpoint. The Connectors capabilities are available as a list at the connector level (under the text \"Choose a Trigger or Action from the list\"). Select the \"Call Insights\" capability from the list to set up your request. With the \"Call Insights\" capability selected, you should see multiple tabs at the top of the modal. Select \"General\" to begin setting up how the request values will be passed to the Insights connector. Parameters are made available to the Deduce connector from the global flow scope. Select the object brackets (\"{}\") at the right of the form input and select from \"Global\" scope to pass dynamic values into the Insights request. For example, for the IP field, it is recommended that you select \"Global -> IP (string)\" to pass in the users IP address value at the time the flow executes. For other values where the object brackets are not present, the option to pass dynamic values are not available. NOTE: Consult the table \"Capability Configuration Reference\" table below for additional information about the options and requirements for the Deduce Insights request. The Action section should contain values based on implementation context. In the event a user is successful with login, the Deduce Intelligent MFA connector should use a value reflective of this result. In this particular example, the Deduce Intelligent MFA connector should be added to the flow with an action value of auth.success.iam . The same configuration can be used in a login failure case, to test for account cycling behavior (the value would of the action would be auth.failure.iam ) Once you have set up your Deduce Intelligent MFA connector with the \"Call Insights\" capability, click \"Apply\" to save your connector configuration. Capability Configuration Reference \u00b6 The following table should be used to set required parameters for the Deduce Intelligent MFA request based on global environment variables: IP = Global -> IP (string) User Agent = Global -> UserAgent (string) Action = Hard-coded based on context Passthrough Mode \u00b6 The Deduce Intelligent MFA connector can be added without any action being taken in order to log responses based on data sent to the API. To enable Passthrough Mode, with the capability selected, enable the toggle for \"Passthrough\" under \"General -> Passthrough\". This will result in PingOne DaVinci user data being sent to the API and insights being returned but no action taken on the data returned. Production \u00b6 In order to allow Deduce Intelligent MFA decisioning to impact the user flow, Passthrough Mode must be disabled. To disable Passthrough Mode, in the \"General\" section, select \"Disable\" in the Passthrough Mode toggle under the capability settings. Insights Signals \u00b6 When users interact online, they create a digital fingerprint that characterizes their typical patterns of behavior. The networks, devices, geographies, and more all factor into our understanding of account identity. Deduce Identity Insights leverages this understanding and generates signals which are leveraged to help companies make security decisions that are uniquely tailored to them. Using the connector in a flow \u00b6 You can use the Deduce Intelligent MFA connector in a variety of use cases, such as: Login - Success/Failure \u00b6 The Deduce Intelligent MFA connector can be leveraged at the point of login, to analyze user details and conditions around specific outcomes, in order to better mitigate risk associated with user fraud and account takeover. When an authentication request responds with an outcome, you can plug in the contextual action values to the Deduce Insights request to gain a better understanding of this user/account observed behavior, and if the Deduce Identity Network deems this action to be a risk. Capabilities \u00b6 Call Insights (callInsights) \u00b6 Request signal data from Deduce Insights IP textField required \u00b6 The IP address for the user connection Email textField required \u00b6 The email address for the user profile User Agent textField required \u00b6 The user agent details for the user connection Action textField required \u00b6 The resulting action from the auth flow Passthrough Mode toggleSwitch required \u00b6 For testing purposes Troubleshooting \u00b6 The following section describes troubleshooting techniques/suggestions for common errors: (1) Request Time-Out -- check environment credentials (site ID / API key) -- if the request times out, it is likely that the connector is attempting to access a resource that either doesn't exist or is not available. Make sure your environment credentials are accurate and correspond to the correct Deduce Insights endpoint. (2) Bad Request (Status 400) -- malformed JSON, missing or incorrectly formatted parameters -- if the request returns a \"Bad Request - Status 400\", this is likely due to the request body being incorrectly formatted. In this case, check how required parameters are being passed to the connector to ensure that they are formatted correctly in terms of type (these values should be type \"string\"). (3) Unauthorized (Status 401) -- incorrect credentials, endpoint not provisioned -- if the request returns an \"Unauthorized - Status 401\", verify that your credentials are correct and if the issue still persists, contact your Deduce representative for support. Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities .","title":"Deduce Intelligent MFA"},{"location":"deduce/#deduce-intelligent-mfa","text":"This guide details how to install and use the Deduce Intelligent MFA connector for your PingOne DaVinci flow. This no-code solution leverages our Deduce Identity Insights API and is configurable to more accurately determine when to present a challenge or trust a user at the moment of login.","title":"Deduce Intelligent MFA"},{"location":"deduce/#requirements","text":"To set up the Deduce Intelligent MFA connector, you'll need the following: 1. Deduce Insights API Key 2. Deduce Insights Site ID","title":"Requirements"},{"location":"deduce/#integrate-setup-in-flow-studio","text":"Select Add Integration (using the \"+\" symbol) at the bottom left corner of the Flow Studio. With the connector present in the workflow, click on the Deduce step and select the blue pencil icon at the top of the panel. This is where you will input your API Key and Site ID (required) for making requests to the Deduce Insights endpoint. The Connectors capabilities are available as a list at the connector level (under the text \"Choose a Trigger or Action from the list\"). Select the \"Call Insights\" capability from the list to set up your request. With the \"Call Insights\" capability selected, you should see multiple tabs at the top of the modal. Select \"General\" to begin setting up how the request values will be passed to the Insights connector. Parameters are made available to the Deduce connector from the global flow scope. Select the object brackets (\"{}\") at the right of the form input and select from \"Global\" scope to pass dynamic values into the Insights request. For example, for the IP field, it is recommended that you select \"Global -> IP (string)\" to pass in the users IP address value at the time the flow executes. For other values where the object brackets are not present, the option to pass dynamic values are not available. NOTE: Consult the table \"Capability Configuration Reference\" table below for additional information about the options and requirements for the Deduce Insights request. The Action section should contain values based on implementation context. In the event a user is successful with login, the Deduce Intelligent MFA connector should use a value reflective of this result. In this particular example, the Deduce Intelligent MFA connector should be added to the flow with an action value of auth.success.iam . The same configuration can be used in a login failure case, to test for account cycling behavior (the value would of the action would be auth.failure.iam ) Once you have set up your Deduce Intelligent MFA connector with the \"Call Insights\" capability, click \"Apply\" to save your connector configuration.","title":"Integrate &amp; Setup in Flow Studio"},{"location":"deduce/#capability-configuration-reference","text":"The following table should be used to set required parameters for the Deduce Intelligent MFA request based on global environment variables: IP = Global -> IP (string) User Agent = Global -> UserAgent (string) Action = Hard-coded based on context","title":"Capability Configuration Reference"},{"location":"deduce/#passthrough-mode","text":"The Deduce Intelligent MFA connector can be added without any action being taken in order to log responses based on data sent to the API. To enable Passthrough Mode, with the capability selected, enable the toggle for \"Passthrough\" under \"General -> Passthrough\". This will result in PingOne DaVinci user data being sent to the API and insights being returned but no action taken on the data returned.","title":"Passthrough Mode"},{"location":"deduce/#production","text":"In order to allow Deduce Intelligent MFA decisioning to impact the user flow, Passthrough Mode must be disabled. To disable Passthrough Mode, in the \"General\" section, select \"Disable\" in the Passthrough Mode toggle under the capability settings.","title":"Production"},{"location":"deduce/#insights-signals","text":"When users interact online, they create a digital fingerprint that characterizes their typical patterns of behavior. The networks, devices, geographies, and more all factor into our understanding of account identity. Deduce Identity Insights leverages this understanding and generates signals which are leveraged to help companies make security decisions that are uniquely tailored to them.","title":"Insights Signals"},{"location":"deduce/#using-the-connector-in-a-flow","text":"You can use the Deduce Intelligent MFA connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"deduce/#login-successfailure","text":"The Deduce Intelligent MFA connector can be leveraged at the point of login, to analyze user details and conditions around specific outcomes, in order to better mitigate risk associated with user fraud and account takeover. When an authentication request responds with an outcome, you can plug in the contextual action values to the Deduce Insights request to gain a better understanding of this user/account observed behavior, and if the Deduce Identity Network deems this action to be a risk.","title":"Login - Success/Failure"},{"location":"deduce/#capabilities","text":"","title":"Capabilities"},{"location":"deduce/#call-insights-callinsights","text":"Request signal data from Deduce Insights","title":"Call Insights (callInsights)"},{"location":"deduce/#ip-textfield-required","text":"The IP address for the user connection","title":"IP textField required"},{"location":"deduce/#email-textfield-required","text":"The email address for the user profile","title":"Email textField required"},{"location":"deduce/#user-agent-textfield-required","text":"The user agent details for the user connection","title":"User Agent textField required"},{"location":"deduce/#action-textfield-required","text":"The resulting action from the auth flow","title":"Action textField required"},{"location":"deduce/#passthrough-mode-toggleswitch-required","text":"For testing purposes","title":"Passthrough Mode toggleSwitch required"},{"location":"deduce/#troubleshooting","text":"The following section describes troubleshooting techniques/suggestions for common errors: (1) Request Time-Out -- check environment credentials (site ID / API key) -- if the request times out, it is likely that the connector is attempting to access a resource that either doesn't exist or is not available. Make sure your environment credentials are accurate and correspond to the correct Deduce Insights endpoint. (2) Bad Request (Status 400) -- malformed JSON, missing or incorrectly formatted parameters -- if the request returns a \"Bad Request - Status 400\", this is likely due to the request body being incorrectly formatted. In this case, check how required parameters are being passed to the connector to ensure that they are formatted correctly in terms of type (these values should be type \"string\"). (3) Unauthorized (Status 401) -- incorrect credentials, endpoint not provisioned -- if the request returns an \"Unauthorized - Status 401\", verify that your credentials are correct and if the issue still persists, contact your Deduce representative for support.","title":"Troubleshooting"},{"location":"deduce/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"google-analytics/","text":"","title":"Index"},{"location":"hubspot/","text":"Hubspot Connector \u00b6 Doc draft \u00b6 Author: Scott Banducci (scottbanducci@pingidentity.com) Introduction \u00b6 Hubspot is a provider of software products for CRM, CMS, inbound marketing, sales, and customer service needs. Their platform offers a free, robust alternative to other, more costly solution providers. The Hubspot connector for Davinci enables you to: Create a Contact Read a Contact Update a Contact Archive a Contact Associate a Contact with an Object Create a Ticket Update a Ticket Read a Ticket Archive a Ticket Associate a Ticket with an Object Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Hubspot documentation: Hubspot Private-App API Documentation Contacts API documentation Tickets API documentation Requirements \u00b6 To use the connector, you'll need: A Hubspot Account Your store's Private-App's bearer Token. To generate: Hubspot account homepage -> Settings -> Integrations -> Private Apps Setting up the connector \u00b6 In Davinci, add a Hubspot connection via the \"Connections\" tab. For help, see Adding a connection . Connector settings \u00b6 Once you've added the connection click on its logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) bearer token and click apply. This ensures that whenever you use this connector you will not have to reenter enter this information. Using the connector in a flow \u00b6 The Hubspot connector allows you to create, read, update, archive and associate your Contacts or Tickets as part of your flow. In the Davinci Flow Studio add a Hubspot connector (remember to setup your bearer token). Then choose the capability you'd like to use it for (create, read, update, archive, associate). You will then need to select the parameters from previous nodes in the flow (ex. an HTML form) to populate the fields. Creating/Updating a Contact or Ticket \u00b6 If you want to automate the creation/update of a Contact or Ticket in Hubspot you can use this connector. Creates a Contact/Ticket with the information entered or updates the information entered. Careful about duplicate information, especially email . Read a Contact/Ticket \u00b6 If you want to return all the contact/ticket information by ID number use the Read Contact or Read Ticket capability. Archive a Contact/Ticket \u00b6 Moves target Contact or Ticket to archive. This is Hubspot's version of Delete. Associate a Contact/Ticket with an Object \u00b6 If you want to create an Association between a Contact or Ticket and an Object. For example, if a ticket is created without an Association and you'd like to automate associating it with a certain company, use the Associate capabilities. You will need a few things: the Contact/Ticket ID number the toObject type (ex. Company) the toObject ID number (ex. 8923061577) the association Type (ex. 1, 2, 3, ticket_to_company, 4, contact_to_company, etc.) Capabilities \u00b6 Troubleshooting \u00b6 NOTE: that the Hubspot API will respond with an empty JSON when successfully archived (with code: 204 No Content). NOTE: that the Hubspot API will respond with the raw the Contact or Ticket JSON object. NOTE: that the following Hubspot fields have default values that can be text or numbers (recommend using numbers for un-configured test accounts): - pipeline name, - pipeline status, - association type NOTE: the private app bearer Token must be set up for the entire connector. You can do this by clicking on the connector on the Connections page. Limitations \u00b6 Not suitable for batch operations (this connector does not allow the following: List all, Create Multiple, Archive all, etc.) This connector was not built to allow interactions with archived objects. All relevant calls include (archived: \"false\").","title":"Hubspot Connector"},{"location":"hubspot/#hubspot-connector","text":"","title":"Hubspot Connector"},{"location":"hubspot/#doc-draft","text":"Author: Scott Banducci (scottbanducci@pingidentity.com)","title":"Doc draft"},{"location":"hubspot/#introduction","text":"Hubspot is a provider of software products for CRM, CMS, inbound marketing, sales, and customer service needs. Their platform offers a free, robust alternative to other, more costly solution providers. The Hubspot connector for Davinci enables you to: Create a Contact Read a Contact Update a Contact Archive a Contact Associate a Contact with an Object Create a Ticket Update a Ticket Read a Ticket Archive a Ticket Associate a Ticket with an Object","title":"Introduction"},{"location":"hubspot/#setup","text":"","title":"Setup"},{"location":"hubspot/#resources","text":"For information and setup help, see the following sections of the Hubspot documentation: Hubspot Private-App API Documentation Contacts API documentation Tickets API documentation","title":"Resources"},{"location":"hubspot/#requirements","text":"To use the connector, you'll need: A Hubspot Account Your store's Private-App's bearer Token. To generate: Hubspot account homepage -> Settings -> Integrations -> Private Apps","title":"Requirements"},{"location":"hubspot/#setting-up-the-connector","text":"In Davinci, add a Hubspot connection via the \"Connections\" tab. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"hubspot/#connector-settings","text":"Once you've added the connection click on its logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) bearer token and click apply. This ensures that whenever you use this connector you will not have to reenter enter this information.","title":"Connector settings"},{"location":"hubspot/#using-the-connector-in-a-flow","text":"The Hubspot connector allows you to create, read, update, archive and associate your Contacts or Tickets as part of your flow. In the Davinci Flow Studio add a Hubspot connector (remember to setup your bearer token). Then choose the capability you'd like to use it for (create, read, update, archive, associate). You will then need to select the parameters from previous nodes in the flow (ex. an HTML form) to populate the fields.","title":"Using the connector in a flow"},{"location":"hubspot/#creatingupdating-a-contact-or-ticket","text":"If you want to automate the creation/update of a Contact or Ticket in Hubspot you can use this connector. Creates a Contact/Ticket with the information entered or updates the information entered. Careful about duplicate information, especially email .","title":"Creating/Updating a Contact or Ticket"},{"location":"hubspot/#read-a-contactticket","text":"If you want to return all the contact/ticket information by ID number use the Read Contact or Read Ticket capability.","title":"Read a Contact/Ticket"},{"location":"hubspot/#archive-a-contactticket","text":"Moves target Contact or Ticket to archive. This is Hubspot's version of Delete.","title":"Archive a Contact/Ticket"},{"location":"hubspot/#associate-a-contactticket-with-an-object","text":"If you want to create an Association between a Contact or Ticket and an Object. For example, if a ticket is created without an Association and you'd like to automate associating it with a certain company, use the Associate capabilities. You will need a few things: the Contact/Ticket ID number the toObject type (ex. Company) the toObject ID number (ex. 8923061577) the association Type (ex. 1, 2, 3, ticket_to_company, 4, contact_to_company, etc.)","title":"Associate a Contact/Ticket with an Object"},{"location":"hubspot/#capabilities","text":"","title":"Capabilities"},{"location":"hubspot/#troubleshooting","text":"NOTE: that the Hubspot API will respond with an empty JSON when successfully archived (with code: 204 No Content). NOTE: that the Hubspot API will respond with the raw the Contact or Ticket JSON object. NOTE: that the following Hubspot fields have default values that can be text or numbers (recommend using numbers for un-configured test accounts): - pipeline name, - pipeline status, - association type NOTE: the private app bearer Token must be set up for the entire connector. You can do this by clicking on the connector on the Connections page.","title":"Troubleshooting"},{"location":"hubspot/#limitations","text":"Not suitable for batch operations (this connector does not allow the following: List all, Create Multiple, Archive all, etc.) This connector was not built to allow interactions with archived objects. All relevant calls include (archived: \"false\").","title":"Limitations"},{"location":"human/","text":"Human Connector \u00b6 Author: Rick Rosser and Brian Henning Introduction \u00b6 The HUMAN Connector is used to identify BOT threats using HUMAN signal data. This decision can used to mitigate BOT threats. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the HUMAN documentation: https://docs.humansecurity.com/index.html \u00b6 Requirements \u00b6 To use the connector, you'll need: HUMAN JS Tag HUMAN Customer Id HUMAN Mitigation API Token HUMAN Policy Name (Optional) Setup form to capture HUMAN signal data. \u00b6 To use the HUMAN connector, you will first need the HUMAN tag provided by your HUMAN representative. This tag will collect and return signal data which will be passed to the HUMAN connector. Signal data is required to receive a bot-or-not decision from the HUMAN connector. You can view additional information about the HUMAN tag in the documentation . There is also a sample flow template that demonstrates its usage. Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 The following fields are required in the GENERAL tab: * HUMAN Customer ID - Provided by your HUMAN representative * HUMAN Authentication Token - Provided by your HUMAN representative * HUMAN Policy Name - Provided by your HUMAN representative - *This may be an empty string * IP Address - Global property * User Agent - Global property * Session - OZ_TC property returned by HUMAN tag * Payload - OZ_SG property returned by HUMAN tag * DataToken - OZ_DT property returned by HUMAN tag Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: User Registration/Login \u00b6 The HUMAN tag should be loaded immediately to begin collecting signal data. Once the user finishes filling out the form and submits, you can retrieve the necessary fields (OZ_TC, OZ_SG, OZ_DT) provided by the HUMAN tag and pass those to their respective fields in the HUMAN connector (session, payload, dataToken). Please see the sample flow template for an example of this use case. Capabilities \u00b6 HUMAN Verification Engine (verification) \u00b6 Know Who's Real on the Internet. HUMAN Customer ID textField \u00b6 Customer ID from HUMAN HUMAN Authentication Token textField \u00b6 Bearer Token from HUMAN HUMAN Policy Name textField \u00b6 HUMAN mitigation policy name IP Address textField \u00b6 IP address User Agent textField \u00b6 User Agent Session textField \u00b6 Session Token Payload textField \u00b6 Payload Token Data Token textField \u00b6 Data Token","title":"Human Connector"},{"location":"human/#human-connector","text":"Author: Rick Rosser and Brian Henning","title":"Human Connector"},{"location":"human/#introduction","text":"The HUMAN Connector is used to identify BOT threats using HUMAN signal data. This decision can used to mitigate BOT threats.","title":"Introduction"},{"location":"human/#setup","text":"","title":"Setup"},{"location":"human/#resources","text":"For information and setup help, see the following sections of the HUMAN documentation:","title":"Resources"},{"location":"human/#httpsdocshumansecuritycomindexhtml","text":"","title":"https://docs.humansecurity.com/index.html"},{"location":"human/#requirements","text":"To use the connector, you'll need: HUMAN JS Tag HUMAN Customer Id HUMAN Mitigation API Token HUMAN Policy Name (Optional)","title":"Requirements"},{"location":"human/#setup-form-to-capture-human-signal-data","text":"To use the HUMAN connector, you will first need the HUMAN tag provided by your HUMAN representative. This tag will collect and return signal data which will be passed to the HUMAN connector. Signal data is required to receive a bot-or-not decision from the HUMAN connector. You can view additional information about the HUMAN tag in the documentation . There is also a sample flow template that demonstrates its usage.","title":"Setup form to capture HUMAN signal data."},{"location":"human/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"human/#connector-settings","text":"The following fields are required in the GENERAL tab: * HUMAN Customer ID - Provided by your HUMAN representative * HUMAN Authentication Token - Provided by your HUMAN representative * HUMAN Policy Name - Provided by your HUMAN representative - *This may be an empty string * IP Address - Global property * User Agent - Global property * Session - OZ_TC property returned by HUMAN tag * Payload - OZ_SG property returned by HUMAN tag * DataToken - OZ_DT property returned by HUMAN tag","title":"Connector settings"},{"location":"human/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"human/#user-registrationlogin","text":"The HUMAN tag should be loaded immediately to begin collecting signal data. Once the user finishes filling out the form and submits, you can retrieve the necessary fields (OZ_TC, OZ_SG, OZ_DT) provided by the HUMAN tag and pass those to their respective fields in the HUMAN connector (session, payload, dataToken). Please see the sample flow template for an example of this use case.","title":"User Registration/Login"},{"location":"human/#capabilities","text":"","title":"Capabilities"},{"location":"human/#human-verification-engine-verification","text":"Know Who's Real on the Internet.","title":"HUMAN Verification Engine (verification)"},{"location":"human/#human-customer-id-textfield","text":"Customer ID from HUMAN","title":"HUMAN Customer ID textField"},{"location":"human/#human-authentication-token-textfield","text":"Bearer Token from HUMAN","title":"HUMAN Authentication Token textField"},{"location":"human/#human-policy-name-textfield","text":"HUMAN mitigation policy name","title":"HUMAN Policy Name textField"},{"location":"human/#ip-address-textfield","text":"IP address","title":"IP Address textField"},{"location":"human/#user-agent-textfield","text":"User Agent","title":"User Agent textField"},{"location":"human/#session-textfield","text":"Session Token","title":"Session textField"},{"location":"human/#payload-textfield","text":"Payload Token","title":"Payload textField"},{"location":"human/#data-token-textfield","text":"Data Token","title":"Data Token textField"},{"location":"ipgeolocationio/","text":"IPGeoLocation.io Connector \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Free IP API provides country, city, state, province, local currency, latitude and longitude, company detail, ISP lookup, language, zip code, country calling code, time zone, current time, sunset and sunrise time, moonset and moonrise time from any IPv4 and IPv6 address in REST, JSON and XML format over HTTPS. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the ipgeolocation.io documentation: https://ipgeolocation.io/documentation/ip-geolocation-api.html Requirements \u00b6 You will need to obtain an API Key even for the free API. You may obtain one by signing up at: https://ipgeolocation.io/signup.html Setting up the connector \u00b6 When creating an instance of this connector in DaVinci, you will need to set your API key in the connector settings. That's the only thing you need. Connector settings \u00b6 API Key: you can get the API Key once you have signed up by logging in to your ipgeolocation.io account at https://app.ipgeolocation.io/auth/login Using the connector in a flow \u00b6 TO use the connector in a flow, you can pass it the global.ip variable or another IP address obtained from another connection. Use case \u00b6 IP Geolocation is a technique used to find out the geographical location of the user using his IP address. Wherever in the world, you use the internet, you will be assigned an IP address. This IP address contains your network identity and your location information. This information is used by online businesses to recognize their visitors and offer a more local experience such as displaying prices in local currency , calculating shipping cost based on the detected conutry or copmuting time differences with the detected timezone. Capabilities \u00b6 Single Lookup (singleLookup) \u00b6 Single IP address lookup IP address textField required \u00b6 IP address to lookup Language dropDown \u00b6 Paid plan subscriptions can get the response in languages other than English. English German Russian Japanese French Chinese Simplified Spanish Czech Italian Limitations \u00b6 This connector does not implement . the astronomy or timezone APIs that ipgeolocation.io also offers . the bulk IP gelocation API","title":"IPGeoLocation.io Connector"},{"location":"ipgeolocationio/#ipgeolocationio-connector","text":"Author: arno@pingidentity.com","title":"IPGeoLocation.io Connector"},{"location":"ipgeolocationio/#introduction","text":"Free IP API provides country, city, state, province, local currency, latitude and longitude, company detail, ISP lookup, language, zip code, country calling code, time zone, current time, sunset and sunrise time, moonset and moonrise time from any IPv4 and IPv6 address in REST, JSON and XML format over HTTPS.","title":"Introduction"},{"location":"ipgeolocationio/#setup","text":"","title":"Setup"},{"location":"ipgeolocationio/#resources","text":"For information and setup help, see the following sections of the ipgeolocation.io documentation: https://ipgeolocation.io/documentation/ip-geolocation-api.html","title":"Resources"},{"location":"ipgeolocationio/#requirements","text":"You will need to obtain an API Key even for the free API. You may obtain one by signing up at: https://ipgeolocation.io/signup.html","title":"Requirements"},{"location":"ipgeolocationio/#setting-up-the-connector","text":"When creating an instance of this connector in DaVinci, you will need to set your API key in the connector settings. That's the only thing you need.","title":"Setting up the connector"},{"location":"ipgeolocationio/#connector-settings","text":"API Key: you can get the API Key once you have signed up by logging in to your ipgeolocation.io account at https://app.ipgeolocation.io/auth/login","title":"Connector settings"},{"location":"ipgeolocationio/#using-the-connector-in-a-flow","text":"TO use the connector in a flow, you can pass it the global.ip variable or another IP address obtained from another connection.","title":"Using the connector in a flow"},{"location":"ipgeolocationio/#use-case","text":"IP Geolocation is a technique used to find out the geographical location of the user using his IP address. Wherever in the world, you use the internet, you will be assigned an IP address. This IP address contains your network identity and your location information. This information is used by online businesses to recognize their visitors and offer a more local experience such as displaying prices in local currency , calculating shipping cost based on the detected conutry or copmuting time differences with the detected timezone.","title":"Use case"},{"location":"ipgeolocationio/#capabilities","text":"","title":"Capabilities"},{"location":"ipgeolocationio/#single-lookup-singlelookup","text":"Single IP address lookup","title":"Single Lookup (singleLookup)"},{"location":"ipgeolocationio/#ip-address-textfield-required","text":"IP address to lookup","title":"IP address textField required"},{"location":"ipgeolocationio/#language-dropdown","text":"Paid plan subscriptions can get the response in languages other than English. English German Russian Japanese French Chinese Simplified Spanish Czech Italian","title":"Language dropDown"},{"location":"ipgeolocationio/#limitations","text":"This connector does not implement . the astronomy or timezone APIs that ipgeolocation.io also offers . the bulk IP gelocation API","title":"Limitations"},{"location":"ipregistry/","text":"ipregistry.co Connector \u00b6 Author: Mike Simon Introduction \u00b6 The ipregistry connector provides geolocation and threat data and information associated with an IPv4 or IPv6 IP address. The connector interfaces with the ipregistry API to return up to 82 unique data points, including location data, connection data, Autonomous System Number (ASN), company name, domain, carrier data, time zone, currency, and security assessment data. Refer to API Respone Fields for detailed listing and description of available data points. The connector provides a single capability using an IPv4/IPv6 address as input. For additional details, and to register for an API key from the service provider, refer to the ipgregistry.co API Documentation . Setup \u00b6 Resources \u00b6 An ipregistry account and API Key is required to interact with the ipregistry API. Key ipregistry.co documentation: Sign-up for a free ipregistry.co Account Quick Start Guide API Documentation The ipregistry API key will be used within the ipregistry.co DaVinci connector configuration. For information and setup help, see the following sections of the DaVinci documentation: DaVinci documentation: Importing a flow from the Flow Library Adding a connection Setting up the connector \u00b6 In DaVinci, add an ipregistry.co connection. For help, see Adding a connection . When using the import/export capabilities, the target Connectors must be installed in the target environment as a prerequisite prior to migrating a flow. The import/export process cannot create an instance of a connector that does not exist in the environment. Connector settings \u00b6 Configure the connector settings on the General tab: API Key: The requests made to the Ipregistry API are identified by API keys. The API key is required, otherwise an error is returned. Using the connector in a flow \u00b6 You can use sample flows as a starting point or create your own flows to satisfy your requirements. Capabilities \u00b6 Single IP Lookup (ipLookup) \u00b6 Performs a lookup of the provided IPv4/IPv6 address, returning aggregated geolocation and threat information. IP Address textField required \u00b6 IPv4/IPv6 address to lookup. Troubleshooting \u00b6 If you are having issues with the ipregistry.co connector, you can try the following: Verify that the API Key is correct and enabled. For each connector in the flow, make sure that all of the mandatory inputs have been provided. Use the Analytics feature to see where the flow stopped. Select the Options icon, and turn on Show Node ID. This will make it easier to identify the source of inputs and outputs.","title":"ipregistry.co Connector"},{"location":"ipregistry/#ipregistryco-connector","text":"Author: Mike Simon","title":"ipregistry.co Connector"},{"location":"ipregistry/#introduction","text":"The ipregistry connector provides geolocation and threat data and information associated with an IPv4 or IPv6 IP address. The connector interfaces with the ipregistry API to return up to 82 unique data points, including location data, connection data, Autonomous System Number (ASN), company name, domain, carrier data, time zone, currency, and security assessment data. Refer to API Respone Fields for detailed listing and description of available data points. The connector provides a single capability using an IPv4/IPv6 address as input. For additional details, and to register for an API key from the service provider, refer to the ipgregistry.co API Documentation .","title":"Introduction"},{"location":"ipregistry/#setup","text":"","title":"Setup"},{"location":"ipregistry/#resources","text":"An ipregistry account and API Key is required to interact with the ipregistry API. Key ipregistry.co documentation: Sign-up for a free ipregistry.co Account Quick Start Guide API Documentation The ipregistry API key will be used within the ipregistry.co DaVinci connector configuration. For information and setup help, see the following sections of the DaVinci documentation: DaVinci documentation: Importing a flow from the Flow Library Adding a connection","title":"Resources"},{"location":"ipregistry/#setting-up-the-connector","text":"In DaVinci, add an ipregistry.co connection. For help, see Adding a connection . When using the import/export capabilities, the target Connectors must be installed in the target environment as a prerequisite prior to migrating a flow. The import/export process cannot create an instance of a connector that does not exist in the environment.","title":"Setting up the connector"},{"location":"ipregistry/#connector-settings","text":"Configure the connector settings on the General tab: API Key: The requests made to the Ipregistry API are identified by API keys. The API key is required, otherwise an error is returned.","title":"Connector settings"},{"location":"ipregistry/#using-the-connector-in-a-flow","text":"You can use sample flows as a starting point or create your own flows to satisfy your requirements.","title":"Using the connector in a flow"},{"location":"ipregistry/#capabilities","text":"","title":"Capabilities"},{"location":"ipregistry/#single-ip-lookup-iplookup","text":"Performs a lookup of the provided IPv4/IPv6 address, returning aggregated geolocation and threat information.","title":"Single IP Lookup (ipLookup)"},{"location":"ipregistry/#ip-address-textfield-required","text":"IPv4/IPv6 address to lookup.","title":"IP Address textField required"},{"location":"ipregistry/#troubleshooting","text":"If you are having issues with the ipregistry.co connector, you can try the following: Verify that the API Key is correct and enabled. For each connector in the flow, make sure that all of the mandatory inputs have been provided. Use the Analytics feature to see where the flow stopped. Select the Options icon, and turn on Show Node ID. This will make it easier to identify the source of inputs and outputs.","title":"Troubleshooting"},{"location":"ipstack/","text":"IPStack Connector \u00b6 Doc draft \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Locate and identify website visitors by IP address. ipstack offers one of the leading IP to geolocation APIs and global IP database services worldwide. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the ipstack documentation: https://ipstack.com/documentation Requirements \u00b6 To use the connector, you'll need an API Key. You can get one at https://ipstack.com/product Setting up the connector \u00b6 In Singular Key, add a IPStack connection. Connector settings \u00b6 To set your IPStack API Key for your connector, go to the General tab and save your connection. Using the connector in a flow \u00b6 The connector provides comprehensive location-related data, currency-related data, timezone-related data, connection-related data and security-related data. Locating the current IP \u00b6 Capabilities \u00b6 Standard Lookup. (standardLookup) \u00b6 The ipstack's primary endpoint is called Standard Lookup and is used to look up single IPv4 or IPv6 addresses. IP Address textField \u00b6 The IP address for which geolocation data should be obtained. Limitations \u00b6 Currently only support standard lookup","title":"IPStack Connector"},{"location":"ipstack/#ipstack-connector","text":"","title":"IPStack Connector"},{"location":"ipstack/#doc-draft","text":"Author: arno@pingidentity.com","title":"Doc draft"},{"location":"ipstack/#introduction","text":"Locate and identify website visitors by IP address. ipstack offers one of the leading IP to geolocation APIs and global IP database services worldwide.","title":"Introduction"},{"location":"ipstack/#setup","text":"","title":"Setup"},{"location":"ipstack/#resources","text":"For information and setup help, see the following sections of the ipstack documentation: https://ipstack.com/documentation","title":"Resources"},{"location":"ipstack/#requirements","text":"To use the connector, you'll need an API Key. You can get one at https://ipstack.com/product","title":"Requirements"},{"location":"ipstack/#setting-up-the-connector","text":"In Singular Key, add a IPStack connection.","title":"Setting up the connector"},{"location":"ipstack/#connector-settings","text":"To set your IPStack API Key for your connector, go to the General tab and save your connection.","title":"Connector settings"},{"location":"ipstack/#using-the-connector-in-a-flow","text":"The connector provides comprehensive location-related data, currency-related data, timezone-related data, connection-related data and security-related data.","title":"Using the connector in a flow"},{"location":"ipstack/#locating-the-current-ip","text":"","title":"Locating the current IP"},{"location":"ipstack/#capabilities","text":"","title":"Capabilities"},{"location":"ipstack/#standard-lookup-standardlookup","text":"The ipstack's primary endpoint is called Standard Lookup and is used to look up single IPv4 or IPv6 addresses.","title":"Standard Lookup. (standardLookup)"},{"location":"ipstack/#ip-address-textfield","text":"The IP address for which geolocation data should be obtained.","title":"IP Address textField"},{"location":"ipstack/#limitations","text":"Currently only support standard lookup","title":"Limitations"},{"location":"mailchimp-transactional/","text":"Mailchimp Transactional Connector \u00b6 Author: Matthew Teets Introduction \u00b6 This Mailchimp connector allows the user to configure recipient settings, monitor account activity, and send transactional emails containing information on purchases by leveraging the Mailchimp Transactional (Mandrill) API. Capabilities: \u00b6 Send Transactional Email Add Email to Allowlist Remove Email from Allowlist Add Email to Denylist List Account Senders Make Custom API Call Setup \u00b6 Resources \u00b6 For information and additional help, see the following sections of the Mailchimp Transactional API documentation: \u00b6 Mailchimp Capabilities API Documentation: Transactional API Source Send Transactional Email In-depth look Add Email to Allowlist Remove Email from Allowlist Add Email to Denylist List Account Senders DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector Requirements \u00b6 To use the Mailchimp Transactional connector: \u00b6 You must have a Mailchimp Transactional account. Create an account here You must also have a valid API Key in order to make any calls to the Transactional API. Generate a new API Key here You then need to add the domain that you will be sending your emails from. Learn more on how to add your domain here You will need to configure your DNS records to enable DKIM and SPF Learn how to configure your DNS records here You will need to then verify ownership of your domain. Verification documentation here Setting up the connector \u00b6 Mailchimp Connector General Settings: \u00b6 Navigate to the Mailchimp connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Mailchimp). Select the Mailchimp connector. Once the Mailchimp connector has been added the Your Connections list, click on the connector. From here you will see two text fields labeled Transactional API Key and Transactional API Version. Transactional Key : Copy and paste your API Key into this text field. Transactional API Version : This field will already be filled out. Only change this if the API version is out of date. Check the API version in the request URL's found here Example: https://mandrillapp.com/api/1.0/allowlists/add The version here is 1.0 Click Apply Using the connector in a flow \u00b6 Some Mailchimp Transactional connector use cases: \u00b6 Password reset emails Purchase confirmation emails Forum activity Shipping update/notification emails Mailchimp Transactional API Request Requirements: \u00b6 You must have a fully verified and configured Mailchimp account. Both the Transactional API Key and the Transactional API Version must be copy/pasted into the connector settings. Use Case - send a transactional email in a flow: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Mailchimp Transactional connector and choose the Send Transactional Email capability. This Mailchimp capability has four capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variables from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. Subject is simply the subject of the email being sent. Text is where the desried, formatted message is inserted. From Email is used to identify the one sender email address. Recipient Email is used to identify the recipient email address(es). This capability is able to send one message to either one recipient or multiple. To do this, simply insert a comma-separated list of desired email address. E.g. customer_1@gmail.com, customer_2@gmail.com, customer_3@gmail.com, customer_4@gmail.com The connector handles any unintentional spacing oddities with the comma-seperated values. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. Use Case - add an email to your allowlist in a flow: \u00b6 Add the Mailchimp Transactional connector to the desired flow and choose the Add Email to Allowlist capability. This Mailchimp capability has two capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variables from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. Allowlist Email is used to identify the email address being added to the allowlist. Can only handle one email at a time. Comment is an optional description of why the email was added to the allowlist. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. Use Case - print JSON object containing list of account senders in a flow: \u00b6 Add the Mailchimp Transactional connector to the desired flow and choose the List Account Senders capability. This Mailchimp capability has zero capability level properties! Therefore, all you have to do is plug it into the desired position in your flow and click apply. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. Use Case - create custom API call: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Mailchimp connector capability has 4 capability level properties that can be manually filled out: Endpoint : Used to call a specific operation from inside the Mailchimp Transactional API. E.g. /messages/send, /allowlist/add, rejects/add, etc. Visit the Mailchimp Transactional API documentation for more endpoints. Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Headers : Key-value pairs that represent the meta-data associated with the Mailchimp Transactional API request and response. E.g. Content-Type: application/json Body : Used to manually craft a JSON request body for the Mailchimp Transactional API. The Mailchimp connector does not generate any output on its own. To see the information retrieved by the Mailchimp connector you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run. Capabilities \u00b6 Leave this section blank: it will be generated automatically","title":"Mailchimp Transactional Connector"},{"location":"mailchimp-transactional/#mailchimp-transactional-connector","text":"Author: Matthew Teets","title":"Mailchimp Transactional Connector"},{"location":"mailchimp-transactional/#introduction","text":"This Mailchimp connector allows the user to configure recipient settings, monitor account activity, and send transactional emails containing information on purchases by leveraging the Mailchimp Transactional (Mandrill) API.","title":"Introduction"},{"location":"mailchimp-transactional/#capabilities","text":"Send Transactional Email Add Email to Allowlist Remove Email from Allowlist Add Email to Denylist List Account Senders Make Custom API Call","title":"Capabilities:"},{"location":"mailchimp-transactional/#setup","text":"","title":"Setup"},{"location":"mailchimp-transactional/#resources","text":"","title":"Resources"},{"location":"mailchimp-transactional/#for-information-and-additional-help-see-the-following-sections-of-the-mailchimp-transactional-api-documentation","text":"Mailchimp Capabilities API Documentation: Transactional API Source Send Transactional Email In-depth look Add Email to Allowlist Remove Email from Allowlist Add Email to Denylist List Account Senders DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector","title":"For information and additional help, see the following sections of the Mailchimp Transactional API documentation:"},{"location":"mailchimp-transactional/#requirements","text":"","title":"Requirements"},{"location":"mailchimp-transactional/#to-use-the-mailchimp-transactional-connector","text":"You must have a Mailchimp Transactional account. Create an account here You must also have a valid API Key in order to make any calls to the Transactional API. Generate a new API Key here You then need to add the domain that you will be sending your emails from. Learn more on how to add your domain here You will need to configure your DNS records to enable DKIM and SPF Learn how to configure your DNS records here You will need to then verify ownership of your domain. Verification documentation here","title":"To use the Mailchimp Transactional connector:"},{"location":"mailchimp-transactional/#setting-up-the-connector","text":"","title":"Setting up the connector"},{"location":"mailchimp-transactional/#mailchimp-connector-general-settings","text":"Navigate to the Mailchimp connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Mailchimp). Select the Mailchimp connector. Once the Mailchimp connector has been added the Your Connections list, click on the connector. From here you will see two text fields labeled Transactional API Key and Transactional API Version. Transactional Key : Copy and paste your API Key into this text field. Transactional API Version : This field will already be filled out. Only change this if the API version is out of date. Check the API version in the request URL's found here Example: https://mandrillapp.com/api/1.0/allowlists/add The version here is 1.0 Click Apply","title":"Mailchimp Connector General Settings:"},{"location":"mailchimp-transactional/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"mailchimp-transactional/#some-mailchimp-transactional-connector-use-cases","text":"Password reset emails Purchase confirmation emails Forum activity Shipping update/notification emails","title":"Some Mailchimp Transactional connector use cases:"},{"location":"mailchimp-transactional/#mailchimp-transactional-api-request-requirements","text":"You must have a fully verified and configured Mailchimp account. Both the Transactional API Key and the Transactional API Version must be copy/pasted into the connector settings.","title":"Mailchimp Transactional API Request Requirements:"},{"location":"mailchimp-transactional/#use-case-send-a-transactional-email-in-a-flow","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Mailchimp Transactional connector and choose the Send Transactional Email capability. This Mailchimp capability has four capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variables from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. Subject is simply the subject of the email being sent. Text is where the desried, formatted message is inserted. From Email is used to identify the one sender email address. Recipient Email is used to identify the recipient email address(es). This capability is able to send one message to either one recipient or multiple. To do this, simply insert a comma-separated list of desired email address. E.g. customer_1@gmail.com, customer_2@gmail.com, customer_3@gmail.com, customer_4@gmail.com The connector handles any unintentional spacing oddities with the comma-seperated values. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - send a transactional email in a flow:"},{"location":"mailchimp-transactional/#use-case-add-an-email-to-your-allowlist-in-a-flow","text":"Add the Mailchimp Transactional connector to the desired flow and choose the Add Email to Allowlist capability. This Mailchimp capability has two capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variables from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. Allowlist Email is used to identify the email address being added to the allowlist. Can only handle one email at a time. Comment is an optional description of why the email was added to the allowlist. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - add an email to your allowlist in a flow:"},{"location":"mailchimp-transactional/#use-case-print-json-object-containing-list-of-account-senders-in-a-flow","text":"Add the Mailchimp Transactional connector to the desired flow and choose the List Account Senders capability. This Mailchimp capability has zero capability level properties! Therefore, all you have to do is plug it into the desired position in your flow and click apply. The Mailchimp Transactional connector does not generate any output on its own. To see the HTTP response object sent by Mailchimp you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - print JSON object containing list of account senders in a flow:"},{"location":"mailchimp-transactional/#use-case-create-custom-api-call","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Mailchimp connector capability has 4 capability level properties that can be manually filled out: Endpoint : Used to call a specific operation from inside the Mailchimp Transactional API. E.g. /messages/send, /allowlist/add, rejects/add, etc. Visit the Mailchimp Transactional API documentation for more endpoints. Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Headers : Key-value pairs that represent the meta-data associated with the Mailchimp Transactional API request and response. E.g. Content-Type: application/json Body : Used to manually craft a JSON request body for the Mailchimp Transactional API. The Mailchimp connector does not generate any output on its own. To see the information retrieved by the Mailchimp connector you can do the following: Add an HTTP block after your Mailchimp connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Mailchimp connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - create custom API call:"},{"location":"mailchimp-transactional/#capabilities_1","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"microsoft-intune/","text":"Microsoft Intune Connector \u00b6 Introduction \u00b6 Microsoft Intune Connector can be used to access the resources and APIs available through Microsoft Graph. This connector allows you to: User Device Management Make Custom API Call Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Microsoft Intune documentation: Get Access Token Manage User Devices Requirements \u00b6 To use the connector, you'll need: Microsoft identity platform Account and API Access Setting up the connector \u00b6 In Davinci, add a Microsoft Intune connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection . Connector Settings \u00b6 Once you've added the Microsoft Intune connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter below Microsoft identity platform details: Client ID Client Secret Tenant Scope Grant Type Domain Name and click apply. This ensures that whenever you use this connector you will not have to reenter this information and token generated using above parameters is used to authorize all capabilities in flow. Using the connector in a flow \u00b6 User Device Management \u00b6 To get the list of devices that are owned by the user add a Microsoft Intune Connector in the flow studio. Then choose the User Device Management capability. Provide the parameters from previous nodes in the flow (HTML form) and submit the details. Make Custom API Call \u00b6 To make an API call that is not available as a capability in the connector add a Microsoft Intune Connector in the flow studio. Then choose the Custom API Call capability. Provide the below properties from previous nodes in the flow (HTML form) and submit the details. Custom API End point (API path excluding Domain endpoint) Custom API Query parameters Custom API Request body Custom API Headers Custom API Method Capabilities \u00b6 Make Custom API Call (makeCustomApiCall) \u00b6 Define a custom API call to Salesforce Endpoint textField required \u00b6 Endpoint Method dropDown required \u00b6 The HTTP Method. GET POST PUT DELETE PATCH Query Parameters keyValueList \u00b6 Add query parameters and provide their values. Headers keyValueList \u00b6 Add HTTP headers and provide their values. Body codeEditor \u00b6 The raw JSON body, such as \"{ \"Username\": \"jsmith@example.com\", \"ProfileId\": \"00e8a0000024zkjAAA\" }\". User Device Management (userDeviceManagement) \u00b6 User Device Management User ID textField \u00b6 user ID User Principal Name textField \u00b6 User Principal Name Limitations \u00b6 Use of connector is limited by the availability of Microsoft Intune API and account access.","title":"Microsoft Intune Connector"},{"location":"microsoft-intune/#microsoft-intune-connector","text":"","title":"Microsoft Intune Connector"},{"location":"microsoft-intune/#introduction","text":"Microsoft Intune Connector can be used to access the resources and APIs available through Microsoft Graph. This connector allows you to: User Device Management Make Custom API Call","title":"Introduction"},{"location":"microsoft-intune/#setup","text":"","title":"Setup"},{"location":"microsoft-intune/#resources","text":"For information and setup help, see the following sections of the Microsoft Intune documentation: Get Access Token Manage User Devices","title":"Resources"},{"location":"microsoft-intune/#requirements","text":"To use the connector, you'll need: Microsoft identity platform Account and API Access","title":"Requirements"},{"location":"microsoft-intune/#setting-up-the-connector","text":"In Davinci, add a Microsoft Intune connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"microsoft-intune/#connector-settings","text":"Once you've added the Microsoft Intune connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter below Microsoft identity platform details: Client ID Client Secret Tenant Scope Grant Type Domain Name and click apply. This ensures that whenever you use this connector you will not have to reenter this information and token generated using above parameters is used to authorize all capabilities in flow.","title":"Connector Settings"},{"location":"microsoft-intune/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"microsoft-intune/#user-device-management","text":"To get the list of devices that are owned by the user add a Microsoft Intune Connector in the flow studio. Then choose the User Device Management capability. Provide the parameters from previous nodes in the flow (HTML form) and submit the details.","title":"User Device Management"},{"location":"microsoft-intune/#make-custom-api-call","text":"To make an API call that is not available as a capability in the connector add a Microsoft Intune Connector in the flow studio. Then choose the Custom API Call capability. Provide the below properties from previous nodes in the flow (HTML form) and submit the details. Custom API End point (API path excluding Domain endpoint) Custom API Query parameters Custom API Request body Custom API Headers Custom API Method","title":"Make Custom API Call"},{"location":"microsoft-intune/#capabilities","text":"","title":"Capabilities"},{"location":"microsoft-intune/#make-custom-api-call-makecustomapicall","text":"Define a custom API call to Salesforce","title":"Make Custom API Call (makeCustomApiCall)"},{"location":"microsoft-intune/#endpoint-textfield-required","text":"Endpoint","title":"Endpoint textField required"},{"location":"microsoft-intune/#method-dropdown-required","text":"The HTTP Method. GET POST PUT DELETE PATCH","title":"Method dropDown required"},{"location":"microsoft-intune/#query-parameters-keyvaluelist","text":"Add query parameters and provide their values.","title":"Query Parameters keyValueList"},{"location":"microsoft-intune/#headers-keyvaluelist","text":"Add HTTP headers and provide their values.","title":"Headers keyValueList"},{"location":"microsoft-intune/#body-codeeditor","text":"The raw JSON body, such as \"{ \"Username\": \"jsmith@example.com\", \"ProfileId\": \"00e8a0000024zkjAAA\" }\".","title":"Body codeEditor"},{"location":"microsoft-intune/#user-device-management-userdevicemanagement","text":"User Device Management","title":"User Device Management (userDeviceManagement)"},{"location":"microsoft-intune/#user-id-textfield","text":"user ID","title":"User ID textField"},{"location":"microsoft-intune/#user-principal-name-textfield","text":"User Principal Name","title":"User Principal Name textField"},{"location":"microsoft-intune/#limitations","text":"Use of connector is limited by the availability of Microsoft Intune API and account access.","title":"Limitations"},{"location":"opswat/","text":"OPSWAT MetaAccess Connector \u00b6 Author: Josh Porth, Jerold Lodge Introduction \u00b6 OPSWAT's MetaAccess provides zero trust access to applications by ensuring endpoints are compliant as part of attempting to authenticate with an IdP like Ping Federation or an authentication flow builder like Ping DaVinci. As part of the authentication process, the connector consults with MetaAccess to confirm if the device is compliant based on the policies your organization configures in MetaAccess. If the device is compliant, then the device gains access as it normally would, if the device is not compliant, the user will either be just warned or fully blocked (based on configuration), until the device is brought into compliance. The user is provided detailed instructions on how to self-remediate. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the MetaAccess documentation: About MetaAccess: MetaAccess Platform Overview: https://www.opswat.com/products/metaaccess Getting Started: https://docs.opswat.com/macloud-sdp/configuration---management Integrating with Ping Identity's Davinci: https://docs.opswat.com/macloud-sdp/integrations/ping-davinci-guide Requirements \u00b6 To use the connector, you'll need: A free MetaAccess account, you can create one here Create OAuth Application \u00b6 Once your account is created, you can proceed with registering your application . Following submission, applications are confirmed and Client Key and Client Secret strings are provided. These keys are unique and should remain confidential. Enable Cross-Domain API \u00b6 Enable Cross-domain API settings, in Settings > Integrations , on your MetaAccess account. Once the cross-domain API setting is enabled, MetaAccess agent tries to open a cross-domain API at the configured port on an endpoint. Please make sure that the configured port is valid and not used by any existing applications running on the same endpoint. Setting up the connector \u00b6 In Ping DaVinci, add a OPSWAT MetaAccess connection. For help, see Adding a connection . Connector settings \u00b6 Oauth Client ID \u00b6 The Oauth Client Key obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Key from the Oauth Application in MetaAccess . Oauth Client Secret \u00b6 The Oauth Client Secret obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Secret from the Oauth Application in MetaAccess . MetaAccess Domain (Optional) \u00b6 The MetaAccess domain used for making API calls to MetaAccess. In almost all cases the default value ( gears.opswat.com ) is correct. If you are using a different tenant, for example, the Beta tenant, then the value should be changed to gears-beta.opswat.com . Cross-Domain API Port (Optional) \u00b6 The port number of Cross-Domain API. The default value of 11369 should be correct if you did not customize the port number when enabling the Cross-Domain API. Verify the Cross-Domain API port number in MetaAccess under Settings > Integrations . Using the connector in a flow \u00b6 The OPSWAT MetaAccess connector is designed to help DaVinci flow builders limit a user's progress in a flow based on the user's devices compliance status with MetaAccess. The OPSWAT MetaAccess connector provides device compliance and access control functionality within Ping DaVinci Flows. Blocking non-compliant devices \u00b6 Blocking non-compliant devices is the primary use case of the MetaAccess Conector. Simply putting the connector inline with your flow, effectily limiting the progress of non-compliant devices at the point where the MetaAccess Connector is placed. For example, placing the MetaAccess Connector immediately after a PingOne SSO Connector will allow all users to authenticate, but will only allow compliant devices to continure past the MetaAccess Connector. Users progressing beyond the MetaAccess connector must have successfully authenticated with PingOne SSO and passed the MetaAccess compliance check. Capabilities \u00b6 Compliance Check (complianceCheck) \u00b6 Check device's compliance","title":"OPSWAT MetaAccess Connector"},{"location":"opswat/#opswat-metaaccess-connector","text":"Author: Josh Porth, Jerold Lodge","title":"OPSWAT MetaAccess Connector"},{"location":"opswat/#introduction","text":"OPSWAT's MetaAccess provides zero trust access to applications by ensuring endpoints are compliant as part of attempting to authenticate with an IdP like Ping Federation or an authentication flow builder like Ping DaVinci. As part of the authentication process, the connector consults with MetaAccess to confirm if the device is compliant based on the policies your organization configures in MetaAccess. If the device is compliant, then the device gains access as it normally would, if the device is not compliant, the user will either be just warned or fully blocked (based on configuration), until the device is brought into compliance. The user is provided detailed instructions on how to self-remediate.","title":"Introduction"},{"location":"opswat/#setup","text":"","title":"Setup"},{"location":"opswat/#resources","text":"For information and setup help, see the following sections of the MetaAccess documentation: About MetaAccess: MetaAccess Platform Overview: https://www.opswat.com/products/metaaccess Getting Started: https://docs.opswat.com/macloud-sdp/configuration---management Integrating with Ping Identity's Davinci: https://docs.opswat.com/macloud-sdp/integrations/ping-davinci-guide","title":"Resources"},{"location":"opswat/#requirements","text":"To use the connector, you'll need: A free MetaAccess account, you can create one here","title":"Requirements"},{"location":"opswat/#create-oauth-application","text":"Once your account is created, you can proceed with registering your application . Following submission, applications are confirmed and Client Key and Client Secret strings are provided. These keys are unique and should remain confidential.","title":"Create OAuth Application"},{"location":"opswat/#enable-cross-domain-api","text":"Enable Cross-domain API settings, in Settings > Integrations , on your MetaAccess account. Once the cross-domain API setting is enabled, MetaAccess agent tries to open a cross-domain API at the configured port on an endpoint. Please make sure that the configured port is valid and not used by any existing applications running on the same endpoint.","title":"Enable Cross-Domain API"},{"location":"opswat/#setting-up-the-connector","text":"In Ping DaVinci, add a OPSWAT MetaAccess connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"opswat/#connector-settings","text":"","title":"Connector settings"},{"location":"opswat/#oauth-client-id","text":"The Oauth Client Key obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Key from the Oauth Application in MetaAccess .","title":"Oauth Client ID"},{"location":"opswat/#oauth-client-secret","text":"The Oauth Client Secret obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Secret from the Oauth Application in MetaAccess .","title":"Oauth Client Secret"},{"location":"opswat/#metaaccess-domain-optional","text":"The MetaAccess domain used for making API calls to MetaAccess. In almost all cases the default value ( gears.opswat.com ) is correct. If you are using a different tenant, for example, the Beta tenant, then the value should be changed to gears-beta.opswat.com .","title":"MetaAccess Domain (Optional)"},{"location":"opswat/#cross-domain-api-port-optional","text":"The port number of Cross-Domain API. The default value of 11369 should be correct if you did not customize the port number when enabling the Cross-Domain API. Verify the Cross-Domain API port number in MetaAccess under Settings > Integrations .","title":"Cross-Domain API Port (Optional)"},{"location":"opswat/#using-the-connector-in-a-flow","text":"The OPSWAT MetaAccess connector is designed to help DaVinci flow builders limit a user's progress in a flow based on the user's devices compliance status with MetaAccess. The OPSWAT MetaAccess connector provides device compliance and access control functionality within Ping DaVinci Flows.","title":"Using the connector in a flow"},{"location":"opswat/#blocking-non-compliant-devices","text":"Blocking non-compliant devices is the primary use case of the MetaAccess Conector. Simply putting the connector inline with your flow, effectily limiting the progress of non-compliant devices at the point where the MetaAccess Connector is placed. For example, placing the MetaAccess Connector immediately after a PingOne SSO Connector will allow all users to authenticate, but will only allow compliant devices to continure past the MetaAccess Connector. Users progressing beyond the MetaAccess connector must have successfully authenticated with PingOne SSO and passed the MetaAccess compliance check.","title":"Blocking non-compliant devices"},{"location":"opswat/#capabilities","text":"","title":"Capabilities"},{"location":"opswat/#compliance-check-compliancecheck","text":"Check device's compliance","title":"Compliance Check (complianceCheck)"},{"location":"postman/","text":"Postman Connector \u00b6 Author: samirgandhi@pingidentity.com Introduction \u00b6 Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs\u2014faster. Postman Collections are a group of saved requests. The Postman Connector for Davinci allows you to run a Postman collection from within a Davinci Flow. This is useful for running a collection that is already created in Postman rather than rebuilding the work in Davinci. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Postman documentation: Postman Postman Homepage Build Postman Collection Requirements \u00b6 To use the connector, you'll need: Postman A Postman Collection Export Collection and Variables \u00b6 A Postman Collection uses environment variables to be more flexible. Export your desired collection and variable set(s) to be used in Davinci. Export collections, environment variables, and global variables as json describe here: https://learning.postman.com/docs/getting-started/importing-and-exporting-data/ Optional, share collection as public url as described here: https://learning.postman.com/docs/collaborating-in-postman/sharing/#sharing-postman-entities Setting up the connector \u00b6 In Davinci, add a Postman connection. For help, see Adding a connection . Connector settings \u00b6 Global Variables \u00b6 Exported JSON of Global variables from a Postman Workspace. Using the connector in a flow \u00b6 The connector is used in a flow to run a collection. After completion the connector returns the status of all requests and details on any failed assertions. Capabilities \u00b6 Run Collection (runCollection) \u00b6 Run an Postman collection passed as JSON Collection codeEditor \u00b6 Exported JSON blob or {\"url\":\" \"} of collection to be used for iteration Environment Variables codeEditor \u00b6 Environments provide a set of variables for use within collections. JSON blob of an environment exported from postman","title":"Postman Connector"},{"location":"postman/#postman-connector","text":"Author: samirgandhi@pingidentity.com","title":"Postman Connector"},{"location":"postman/#introduction","text":"Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs\u2014faster. Postman Collections are a group of saved requests. The Postman Connector for Davinci allows you to run a Postman collection from within a Davinci Flow. This is useful for running a collection that is already created in Postman rather than rebuilding the work in Davinci.","title":"Introduction"},{"location":"postman/#setup","text":"","title":"Setup"},{"location":"postman/#resources","text":"For information and setup help, see the following sections of the Postman documentation: Postman Postman Homepage Build Postman Collection","title":"Resources"},{"location":"postman/#requirements","text":"To use the connector, you'll need: Postman A Postman Collection","title":"Requirements"},{"location":"postman/#export-collection-and-variables","text":"A Postman Collection uses environment variables to be more flexible. Export your desired collection and variable set(s) to be used in Davinci. Export collections, environment variables, and global variables as json describe here: https://learning.postman.com/docs/getting-started/importing-and-exporting-data/ Optional, share collection as public url as described here: https://learning.postman.com/docs/collaborating-in-postman/sharing/#sharing-postman-entities","title":"Export Collection and Variables"},{"location":"postman/#setting-up-the-connector","text":"In Davinci, add a Postman connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"postman/#connector-settings","text":"","title":"Connector settings"},{"location":"postman/#global-variables","text":"Exported JSON of Global variables from a Postman Workspace.","title":"Global Variables"},{"location":"postman/#using-the-connector-in-a-flow","text":"The connector is used in a flow to run a collection. After completion the connector returns the status of all requests and details on any failed assertions.","title":"Using the connector in a flow"},{"location":"postman/#capabilities","text":"","title":"Capabilities"},{"location":"postman/#run-collection-runcollection","text":"Run an Postman collection passed as JSON","title":"Run Collection (runCollection)"},{"location":"postman/#collection-codeeditor","text":"Exported JSON blob or {\"url\":\" \"} of collection to be used for iteration","title":"Collection codeEditor"},{"location":"postman/#environment-variables-codeeditor","text":"Environments provide a set of variables for use within collections. JSON blob of an environment exported from postman","title":"Environment Variables codeEditor"},{"location":"randomuserme/","text":"RandomUser.me Connector \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Generate random user data Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the randomuser.me documentation: Documentation \u00b6 https://randomuser.me/documentation Requirements \u00b6 The randomuser.me service is free and open-source, no account or key required. Get User \u00b6 Pick a gender or leave random Set a seed to control which user you get Setting up the connector \u00b6 No setup required, simply drop the connector in your flow and get a random user. Connector settings \u00b6 No API key is required. Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: Application testing \u00b6 Get a random user to test that an application, service or API call works. Account provisioning stuffing \u00b6 Some services may require data you do not have, just generate random data about the user and stuff that data in. Capabilities \u00b6 Get Random User (getRandomUser) \u00b6 Generate random user data Gender dropDown \u00b6 Gender of the random user Random Male Female Seed textField \u00b6 Seeds allow you to always generate the same user or set of users Limitations \u00b6 Does not currently support bulk random user generation","title":"RandomUser.me Connector"},{"location":"randomuserme/#randomuserme-connector","text":"Author: arno@pingidentity.com","title":"RandomUser.me Connector"},{"location":"randomuserme/#introduction","text":"Generate random user data","title":"Introduction"},{"location":"randomuserme/#setup","text":"","title":"Setup"},{"location":"randomuserme/#resources","text":"For information and setup help, see the following sections of the randomuser.me documentation:","title":"Resources"},{"location":"randomuserme/#documentation","text":"https://randomuser.me/documentation","title":"Documentation"},{"location":"randomuserme/#requirements","text":"The randomuser.me service is free and open-source, no account or key required.","title":"Requirements"},{"location":"randomuserme/#get-user","text":"Pick a gender or leave random Set a seed to control which user you get","title":"Get User"},{"location":"randomuserme/#setting-up-the-connector","text":"No setup required, simply drop the connector in your flow and get a random user.","title":"Setting up the connector"},{"location":"randomuserme/#connector-settings","text":"No API key is required.","title":"Connector settings"},{"location":"randomuserme/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"randomuserme/#application-testing","text":"Get a random user to test that an application, service or API call works.","title":"Application testing"},{"location":"randomuserme/#account-provisioning-stuffing","text":"Some services may require data you do not have, just generate random data about the user and stuff that data in.","title":"Account provisioning stuffing"},{"location":"randomuserme/#capabilities","text":"","title":"Capabilities"},{"location":"randomuserme/#get-random-user-getrandomuser","text":"Generate random user data","title":"Get Random User (getRandomUser)"},{"location":"randomuserme/#gender-dropdown","text":"Gender of the random user Random Male Female","title":"Gender dropDown"},{"location":"randomuserme/#seed-textfield","text":"Seeds allow you to always generate the same user or set of users","title":"Seed textField"},{"location":"randomuserme/#limitations","text":"Does not currently support bulk random user generation","title":"Limitations"},{"location":"saviynt/","text":"Saviynt Connector \u00b6 Author: Ping Identity Introduction \u00b6 Saviynt connector can be used for account creation and provisioning for users created in Saviynt account. This connector allows you to: Create User Update User Get Account Details Update User Request Fetch Request History Approve-Reject Request Get Request Approval Details Get Pending Requests Create user request with approval Remove Role Get Role Details Add Role Inactive user Get User Details Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Saviynt API documentation: Get Authorization Token Create User Update User Get Account Details Update User Request Fetch Request History Approve-Reject request Get Request approval details Get Pending Requests Create User request Remove Role Get Role Details Add Role Inactive User Get User Details Requirements \u00b6 To use the connector, you'll need: Saviynt Admin User Account Access Saviynt API Domain url and path Setting up the connector \u00b6 In Davinci, add a Saviynt User Non-Approval Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection . Connector Settings \u00b6 Once you've added the Saviynt User Non-Approval Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your Saviynt account details below to get Authorization Token Saviynt Domain url Saviynt Path Saviynt Admin Username Saviynt Admin Password and click apply. This ensures that whenever you use this connector you will not have to reenter this information and username and password is used for generated Token passed as input to Authorise below connector in flow. Using the connector in a flow \u00b6 Create User \u00b6 To create user in the savinyt add a Saviynt connector in the flow studio. Then choose the Create User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Update user details \u00b6 To update user attributes saved in the savinyt add a Saviynt connector in the flow studio. Then choose the Update User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Get Account Details \u00b6 To get account details of user in the savinyt add a Saviynt connector in the flow studio. Then choose the Get account details capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Update User Request \u00b6 To update user request in the savinyt add a Saviynt connector in the flow studio. Then choose the Update User Request capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Fetch Request History \u00b6 To fetch request history in the savinyt add a Saviynt connector in the flow studio. Then choose the Fetch Request History capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Approve-Reject Request \u00b6 To get the lists the existing user details based on search parameter provided add a Saviynt connector in the flow studio. Then choose the userdetails capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria/username submitted. Get Request Approval Details \u00b6 To Get Request Approval Details saved in the savinyt add a Saviynt User Approval Flow connector in the flow studio. Then choose the Get Request Approval Details capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Get Pending Requests \u00b6 To inactivate the exsting savinyt user add a Saviynt connector in the flow studio. Then choose the Inactivate User capability. Provide the username parameters from previous nodes in the flow (HTML form) to modify the user status. Create User with approval \u00b6 To create user in the savinyt add a Saviynt User Approval Flow connector in the flow studio. Then choose the Create User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Remove Role \u00b6 To remove role added for an existing saviynt user add a Saviynt connector in the flow studio. Then choose the Remove Role capability. Provide the input parameters(username & rolename) from previous nodes in the flow (HTML form) and submit the details. Get Role Details \u00b6 To get role details saved add a Saviynt connector in the flow studio. Then choose the Get Role Details For User capability. Provide the input parameters from previous nodes in the flow (HTML form) and submit the details. Add Role \u00b6 To add role to the existing saviynt user add a Saviynt connector in the flow studio. Then choose the Add role to an user capability. Provide the input parameters(username & rolename) from previous nodes in the flow (HTML form) and submit the details. Inactive user \u00b6 To inactivate the exsting savinyt user add a Saviynt connector in the flow studio. Then choose the Inactivate User capability. Provide the username parameters from previous nodes in the flow (HTML form) to modify the user status. Get User Details \u00b6 To get the lists the existing user details based on search parameter provided add a Saviynt connector in the flow studio. Then choose the userdetails capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria/username submitted. Capabilities \u00b6 Create User (createUser) \u00b6 Create an user in saviynt First Name textField required \u00b6 First Name of the user Middle Name textField \u00b6 Provide your middle name Username textField required \u00b6 username for the create user Last Name textField required \u00b6 Last Name of the user Email textField required \u00b6 Email of the user Employee Type dropdownWithCreate \u00b6 Select any employee type Tester Manager TeamLead Developer Start Date textField required \u00b6 Start Date of the user End Date textField required \u00b6 Provide last date of the user City textField \u00b6 Provide your city name State textField \u00b6 Provide your state name Phone Number textField \u00b6 Provide your phone number Country textField \u00b6 Provide your country name Company Name textField \u00b6 Provide your company name Other Attributes variableInputList \u00b6 Add other attributes and their values. Update User (updateUser) \u00b6 Update an user in saviynt First Name textField required \u00b6 First Name of the user Middle Name textField \u00b6 Provide your middle name Username textField required \u00b6 username for the create user Last Name textField required \u00b6 Last Name of the user StatusKey toggleSwitch \u00b6 Statuskey of the user Email textField required \u00b6 Email of the user Employee Type dropdownWithCreate \u00b6 Select any employee type Tester Manager TeamLead Developer Start Date textField required \u00b6 Start Date of the user End Date textField required \u00b6 Provide last date of the user City textField \u00b6 Provide your city name State textField \u00b6 Provide your state name Phone Number textField \u00b6 Provide your phone number Country textField \u00b6 Provide your country name Company Name textField \u00b6 Provide your company name Other Attributes variableInputList \u00b6 Add other attributes and their values. Inactivate User (inactivateUser) \u00b6 Inactivate an user in saviynt Username textField required \u00b6 username for the create user Get User Details (getUserDetails) \u00b6 Get an user details from saviynt Username textField required \u00b6 username for the create user Response Fields textField \u00b6 User attributes which you want to see in the response Filter Criteria textField \u00b6 User fields based on which you want to get the user attribute details(including userkey) Search Criteria textField \u00b6 search for a user based on the string passed (eg - \u201c ab \u201d or \u201c ab\u201d or \u201cab \u201d) in their firstname, lastname, displayname and username only, example - \"ab*\" - This will return all users with firstname or lastname or username starting with \"ab\" Advance Search Criteria textField \u00b6 search for a user based on the string passed (eg - \u201c ab \u201d or \u201c ab\u201d or \u201cab \u201d), example - {\"username\":\"a \", \"firstname\":\" b\"} - This will return all users with username starting with \"a\" AND firstname ending with \"b\". Exact match search is applicable for types boolean, users, customer. Date can be entered in format - yyyy-MM-dd. Maximum number of requests textField \u00b6 Maximum number of requests Offset textField \u00b6 Offset Sort textField \u00b6 Sort Order textField \u00b6 asc/desc Manager textField required \u00b6 Manager of the user Show Security Answers textField \u00b6 \"0\"/\"1\" to display encrypted security answers for the user Add Role To User (addRoleToUser) \u00b6 This will add existing role to an user Username textField required \u00b6 username for the create user Role Name textField required \u00b6 Provide a role name Get Role Details Of User (getRoleDetailsOfUser) \u00b6 This will fetch all roles of an user Username textField required \u00b6 username for the create user Remove Role From User (removeRoleFromUser) \u00b6 This will remove role from an user Username textField required \u00b6 username for the create user Role Name textField required \u00b6 Provide a role name Create User With Approval (createUserWithApproval) \u00b6 Create User First Name textField required \u00b6 First Name of the user Last Name textField required \u00b6 Last Name of the user Roles textField required \u00b6 Roles of the user Employee Type dropdownWithCreate \u00b6 Select any employee type Tester Manager TeamLead Developer Start Date textField required \u00b6 Start Date of the user Status toggleSwitch required \u00b6 Status of the user StatusKey toggleSwitch \u00b6 Statuskey of the user Manager textField required \u00b6 Manager of the user Email textField required \u00b6 Email of the user System Username textField required \u00b6 System username of the user Enabled textField required \u00b6 To enable disable the user Username textField required \u00b6 username for the create user Get Pending Requests (getPendingRequests) \u00b6 Get Pending Requests Maximum number of requests textField \u00b6 Maximum number of requests Request Key textField required \u00b6 Request Key of the pending request Get Request Approval Details (getRequestApprovalDetails) \u00b6 Get Request Approval Details Request Key textField required \u00b6 Request Key of the pending request Approve-Reject Request (approveRejectRequest) \u00b6 Approve-Reject Request Request Key textField required \u00b6 Request Key of the pending request Request ID textField required \u00b6 Request ID of pending request to approve/reject Request Action textField required \u00b6 it will take the value either 1 or 2 for approve/reject respectively Comments textField \u00b6 Comments by approver for particular request Fetch Request History (fetchRequestHistory) \u00b6 Fetch Request History Status toggleSwitch required \u00b6 Status of the user Maximum number of requests textField \u00b6 Maximum number of requests Update User Request (updateUserRequest) \u00b6 Update User Request Username textField required \u00b6 username for the create user First Name textField required \u00b6 First Name of the user Last Name textField required \u00b6 Last Name of the user Designation textField \u00b6 Provide designation Manager textField required \u00b6 Manager of the user Get Account Details (getAccountDetails) \u00b6 Get Account Details Status toggleSwitch required \u00b6 Status of the user Name textField \u00b6 Provide your name Type textField required \u00b6 Provide type Value textField \u00b6 Provide value Rank textField \u00b6 Provide rank Limitations \u00b6 Use of connector is limited by the availability of Saviynt API and account access.","title":"Saviynt Connector"},{"location":"saviynt/#saviynt-connector","text":"Author: Ping Identity","title":"Saviynt Connector"},{"location":"saviynt/#introduction","text":"Saviynt connector can be used for account creation and provisioning for users created in Saviynt account. This connector allows you to: Create User Update User Get Account Details Update User Request Fetch Request History Approve-Reject Request Get Request Approval Details Get Pending Requests Create user request with approval Remove Role Get Role Details Add Role Inactive user Get User Details","title":"Introduction"},{"location":"saviynt/#setup","text":"","title":"Setup"},{"location":"saviynt/#resources","text":"For information and setup help, see the following sections of the Saviynt API documentation: Get Authorization Token Create User Update User Get Account Details Update User Request Fetch Request History Approve-Reject request Get Request approval details Get Pending Requests Create User request Remove Role Get Role Details Add Role Inactive User Get User Details","title":"Resources"},{"location":"saviynt/#requirements","text":"To use the connector, you'll need: Saviynt Admin User Account Access Saviynt API Domain url and path","title":"Requirements"},{"location":"saviynt/#setting-up-the-connector","text":"In Davinci, add a Saviynt User Non-Approval Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"saviynt/#connector-settings","text":"Once you've added the Saviynt User Non-Approval Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your Saviynt account details below to get Authorization Token Saviynt Domain url Saviynt Path Saviynt Admin Username Saviynt Admin Password and click apply. This ensures that whenever you use this connector you will not have to reenter this information and username and password is used for generated Token passed as input to Authorise below connector in flow.","title":"Connector Settings"},{"location":"saviynt/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"saviynt/#create-user","text":"To create user in the savinyt add a Saviynt connector in the flow studio. Then choose the Create User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Create User"},{"location":"saviynt/#update-user-details","text":"To update user attributes saved in the savinyt add a Saviynt connector in the flow studio. Then choose the Update User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Update user details"},{"location":"saviynt/#get-account-details","text":"To get account details of user in the savinyt add a Saviynt connector in the flow studio. Then choose the Get account details capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Get Account Details"},{"location":"saviynt/#update-user-request","text":"To update user request in the savinyt add a Saviynt connector in the flow studio. Then choose the Update User Request capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Update User Request"},{"location":"saviynt/#fetch-request-history","text":"To fetch request history in the savinyt add a Saviynt connector in the flow studio. Then choose the Fetch Request History capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Fetch Request History"},{"location":"saviynt/#approve-reject-request","text":"To get the lists the existing user details based on search parameter provided add a Saviynt connector in the flow studio. Then choose the userdetails capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria/username submitted.","title":"Approve-Reject Request"},{"location":"saviynt/#get-request-approval-details","text":"To Get Request Approval Details saved in the savinyt add a Saviynt User Approval Flow connector in the flow studio. Then choose the Get Request Approval Details capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Get Request Approval Details"},{"location":"saviynt/#get-pending-requests","text":"To inactivate the exsting savinyt user add a Saviynt connector in the flow studio. Then choose the Inactivate User capability. Provide the username parameters from previous nodes in the flow (HTML form) to modify the user status.","title":"Get Pending Requests"},{"location":"saviynt/#create-user-with-approval","text":"To create user in the savinyt add a Saviynt User Approval Flow connector in the flow studio. Then choose the Create User capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Create User with approval"},{"location":"saviynt/#remove-role","text":"To remove role added for an existing saviynt user add a Saviynt connector in the flow studio. Then choose the Remove Role capability. Provide the input parameters(username & rolename) from previous nodes in the flow (HTML form) and submit the details.","title":"Remove Role"},{"location":"saviynt/#get-role-details","text":"To get role details saved add a Saviynt connector in the flow studio. Then choose the Get Role Details For User capability. Provide the input parameters from previous nodes in the flow (HTML form) and submit the details.","title":"Get Role Details"},{"location":"saviynt/#add-role","text":"To add role to the existing saviynt user add a Saviynt connector in the flow studio. Then choose the Add role to an user capability. Provide the input parameters(username & rolename) from previous nodes in the flow (HTML form) and submit the details.","title":"Add Role"},{"location":"saviynt/#inactive-user","text":"To inactivate the exsting savinyt user add a Saviynt connector in the flow studio. Then choose the Inactivate User capability. Provide the username parameters from previous nodes in the flow (HTML form) to modify the user status.","title":"Inactive user"},{"location":"saviynt/#get-user-details","text":"To get the lists the existing user details based on search parameter provided add a Saviynt connector in the flow studio. Then choose the userdetails capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria/username submitted.","title":"Get User Details"},{"location":"saviynt/#capabilities","text":"","title":"Capabilities"},{"location":"saviynt/#create-user-createuser","text":"Create an user in saviynt","title":"Create User (createUser)"},{"location":"saviynt/#first-name-textfield-required","text":"First Name of the user","title":"First Name textField required"},{"location":"saviynt/#middle-name-textfield","text":"Provide your middle name","title":"Middle Name textField"},{"location":"saviynt/#username-textfield-required","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#last-name-textfield-required","text":"Last Name of the user","title":"Last Name textField required"},{"location":"saviynt/#email-textfield-required","text":"Email of the user","title":"Email textField required"},{"location":"saviynt/#employee-type-dropdownwithcreate","text":"Select any employee type Tester Manager TeamLead Developer","title":"Employee Type dropdownWithCreate"},{"location":"saviynt/#start-date-textfield-required","text":"Start Date of the user","title":"Start Date textField required"},{"location":"saviynt/#end-date-textfield-required","text":"Provide last date of the user","title":"End Date textField required"},{"location":"saviynt/#city-textfield","text":"Provide your city name","title":"City textField"},{"location":"saviynt/#state-textfield","text":"Provide your state name","title":"State textField"},{"location":"saviynt/#phone-number-textfield","text":"Provide your phone number","title":"Phone Number textField"},{"location":"saviynt/#country-textfield","text":"Provide your country name","title":"Country textField"},{"location":"saviynt/#company-name-textfield","text":"Provide your company name","title":"Company Name textField"},{"location":"saviynt/#other-attributes-variableinputlist","text":"Add other attributes and their values.","title":"Other Attributes variableInputList"},{"location":"saviynt/#update-user-updateuser","text":"Update an user in saviynt","title":"Update User (updateUser)"},{"location":"saviynt/#first-name-textfield-required_1","text":"First Name of the user","title":"First Name textField required"},{"location":"saviynt/#middle-name-textfield_1","text":"Provide your middle name","title":"Middle Name textField"},{"location":"saviynt/#username-textfield-required_1","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#last-name-textfield-required_1","text":"Last Name of the user","title":"Last Name textField required"},{"location":"saviynt/#statuskey-toggleswitch","text":"Statuskey of the user","title":"StatusKey toggleSwitch"},{"location":"saviynt/#email-textfield-required_1","text":"Email of the user","title":"Email textField required"},{"location":"saviynt/#employee-type-dropdownwithcreate_1","text":"Select any employee type Tester Manager TeamLead Developer","title":"Employee Type dropdownWithCreate"},{"location":"saviynt/#start-date-textfield-required_1","text":"Start Date of the user","title":"Start Date textField required"},{"location":"saviynt/#end-date-textfield-required_1","text":"Provide last date of the user","title":"End Date textField required"},{"location":"saviynt/#city-textfield_1","text":"Provide your city name","title":"City textField"},{"location":"saviynt/#state-textfield_1","text":"Provide your state name","title":"State textField"},{"location":"saviynt/#phone-number-textfield_1","text":"Provide your phone number","title":"Phone Number textField"},{"location":"saviynt/#country-textfield_1","text":"Provide your country name","title":"Country textField"},{"location":"saviynt/#company-name-textfield_1","text":"Provide your company name","title":"Company Name textField"},{"location":"saviynt/#other-attributes-variableinputlist_1","text":"Add other attributes and their values.","title":"Other Attributes variableInputList"},{"location":"saviynt/#inactivate-user-inactivateuser","text":"Inactivate an user in saviynt","title":"Inactivate User (inactivateUser)"},{"location":"saviynt/#username-textfield-required_2","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#get-user-details-getuserdetails","text":"Get an user details from saviynt","title":"Get User Details (getUserDetails)"},{"location":"saviynt/#username-textfield-required_3","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#response-fields-textfield","text":"User attributes which you want to see in the response","title":"Response Fields textField"},{"location":"saviynt/#filter-criteria-textfield","text":"User fields based on which you want to get the user attribute details(including userkey)","title":"Filter Criteria textField"},{"location":"saviynt/#search-criteria-textfield","text":"search for a user based on the string passed (eg - \u201c ab \u201d or \u201c ab\u201d or \u201cab \u201d) in their firstname, lastname, displayname and username only, example - \"ab*\" - This will return all users with firstname or lastname or username starting with \"ab\"","title":"Search Criteria textField"},{"location":"saviynt/#advance-search-criteria-textfield","text":"search for a user based on the string passed (eg - \u201c ab \u201d or \u201c ab\u201d or \u201cab \u201d), example - {\"username\":\"a \", \"firstname\":\" b\"} - This will return all users with username starting with \"a\" AND firstname ending with \"b\". Exact match search is applicable for types boolean, users, customer. Date can be entered in format - yyyy-MM-dd.","title":"Advance Search Criteria textField"},{"location":"saviynt/#maximum-number-of-requests-textfield","text":"Maximum number of requests","title":"Maximum number of requests textField"},{"location":"saviynt/#offset-textfield","text":"Offset","title":"Offset textField"},{"location":"saviynt/#sort-textfield","text":"Sort","title":"Sort textField"},{"location":"saviynt/#order-textfield","text":"asc/desc","title":"Order textField"},{"location":"saviynt/#manager-textfield-required","text":"Manager of the user","title":"Manager textField required"},{"location":"saviynt/#show-security-answers-textfield","text":"\"0\"/\"1\" to display encrypted security answers for the user","title":"Show Security Answers textField"},{"location":"saviynt/#add-role-to-user-addroletouser","text":"This will add existing role to an user","title":"Add Role To User (addRoleToUser)"},{"location":"saviynt/#username-textfield-required_4","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#role-name-textfield-required","text":"Provide a role name","title":"Role Name textField required"},{"location":"saviynt/#get-role-details-of-user-getroledetailsofuser","text":"This will fetch all roles of an user","title":"Get Role Details Of User (getRoleDetailsOfUser)"},{"location":"saviynt/#username-textfield-required_5","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#remove-role-from-user-removerolefromuser","text":"This will remove role from an user","title":"Remove Role From User (removeRoleFromUser)"},{"location":"saviynt/#username-textfield-required_6","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#role-name-textfield-required_1","text":"Provide a role name","title":"Role Name textField required"},{"location":"saviynt/#create-user-with-approval-createuserwithapproval","text":"Create User","title":"Create User With Approval (createUserWithApproval)"},{"location":"saviynt/#first-name-textfield-required_2","text":"First Name of the user","title":"First Name textField required"},{"location":"saviynt/#last-name-textfield-required_2","text":"Last Name of the user","title":"Last Name textField required"},{"location":"saviynt/#roles-textfield-required","text":"Roles of the user","title":"Roles textField required"},{"location":"saviynt/#employee-type-dropdownwithcreate_2","text":"Select any employee type Tester Manager TeamLead Developer","title":"Employee Type dropdownWithCreate"},{"location":"saviynt/#start-date-textfield-required_2","text":"Start Date of the user","title":"Start Date textField required"},{"location":"saviynt/#status-toggleswitch-required","text":"Status of the user","title":"Status toggleSwitch required"},{"location":"saviynt/#statuskey-toggleswitch_1","text":"Statuskey of the user","title":"StatusKey toggleSwitch"},{"location":"saviynt/#manager-textfield-required_1","text":"Manager of the user","title":"Manager textField required"},{"location":"saviynt/#email-textfield-required_2","text":"Email of the user","title":"Email textField required"},{"location":"saviynt/#system-username-textfield-required","text":"System username of the user","title":"System Username textField required"},{"location":"saviynt/#enabled-textfield-required","text":"To enable disable the user","title":"Enabled textField required"},{"location":"saviynt/#username-textfield-required_7","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#get-pending-requests-getpendingrequests","text":"Get Pending Requests","title":"Get Pending Requests (getPendingRequests)"},{"location":"saviynt/#maximum-number-of-requests-textfield_1","text":"Maximum number of requests","title":"Maximum number of requests textField"},{"location":"saviynt/#request-key-textfield-required","text":"Request Key of the pending request","title":"Request Key textField required"},{"location":"saviynt/#get-request-approval-details-getrequestapprovaldetails","text":"Get Request Approval Details","title":"Get Request Approval Details (getRequestApprovalDetails)"},{"location":"saviynt/#request-key-textfield-required_1","text":"Request Key of the pending request","title":"Request Key textField required"},{"location":"saviynt/#approve-reject-request-approverejectrequest","text":"Approve-Reject Request","title":"Approve-Reject Request (approveRejectRequest)"},{"location":"saviynt/#request-key-textfield-required_2","text":"Request Key of the pending request","title":"Request Key textField required"},{"location":"saviynt/#request-id-textfield-required","text":"Request ID of pending request to approve/reject","title":"Request ID textField required"},{"location":"saviynt/#request-action-textfield-required","text":"it will take the value either 1 or 2 for approve/reject respectively","title":"Request Action textField required"},{"location":"saviynt/#comments-textfield","text":"Comments by approver for particular request","title":"Comments textField"},{"location":"saviynt/#fetch-request-history-fetchrequesthistory","text":"Fetch Request History","title":"Fetch Request History (fetchRequestHistory)"},{"location":"saviynt/#status-toggleswitch-required_1","text":"Status of the user","title":"Status toggleSwitch required"},{"location":"saviynt/#maximum-number-of-requests-textfield_2","text":"Maximum number of requests","title":"Maximum number of requests textField"},{"location":"saviynt/#update-user-request-updateuserrequest","text":"Update User Request","title":"Update User Request (updateUserRequest)"},{"location":"saviynt/#username-textfield-required_8","text":"username for the create user","title":"Username textField required"},{"location":"saviynt/#first-name-textfield-required_3","text":"First Name of the user","title":"First Name textField required"},{"location":"saviynt/#last-name-textfield-required_3","text":"Last Name of the user","title":"Last Name textField required"},{"location":"saviynt/#designation-textfield","text":"Provide designation","title":"Designation textField"},{"location":"saviynt/#manager-textfield-required_2","text":"Manager of the user","title":"Manager textField required"},{"location":"saviynt/#get-account-details-getaccountdetails","text":"Get Account Details","title":"Get Account Details (getAccountDetails)"},{"location":"saviynt/#status-toggleswitch-required_2","text":"Status of the user","title":"Status toggleSwitch required"},{"location":"saviynt/#name-textfield","text":"Provide your name","title":"Name textField"},{"location":"saviynt/#type-textfield-required","text":"Provide type","title":"Type textField required"},{"location":"saviynt/#value-textfield","text":"Provide value","title":"Value textField"},{"location":"saviynt/#rank-textfield","text":"Provide rank","title":"Rank textField"},{"location":"saviynt/#limitations","text":"Use of connector is limited by the availability of Saviynt API and account access.","title":"Limitations"},{"location":"segment/","text":"Segment Connector \u00b6 Author: Matthew Teets Introduction \u00b6 Using the software and APIs from Segment, this connector collects, organizes, and cleans your customer data. The Segment connector comes loaded with 7 capabilities that the user is able to start operating out of the box. Capabilities: \u00b6 Identify Group Track Page Screen Alias Make Custom API Call Setup \u00b6 Resources \u00b6 For information and additional help, see the following sections of the Segment API documentation: \u00b6 Segment Capabilities API Documentation: HTTP Tracking API Source Identify Group Track Page Screen Alias DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector Requirements \u00b6 To use the Segment connector: \u00b6 You must first sign up for a free account and workspace with Segment. Create an account here You then must locate and copy your account Write Key. Access the Write Key here Segment requires a Basic Auth Header to be passed with the API request. View setup instructions here To collect data using Segment you must have a source. View source setup instructions here Segment offers testing and debugging tools to easily confirm that your API calls are being successfully sent to the source. View testing and debugging instructions here Setting up the connector \u00b6 Segment Connector General Settings: \u00b6 Navigate to the Clearbit connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Segment). Select the Segment connector. Once the Segment connector has been added the Your Connections list, click on Segment. From here you will see two text fields labeled Write Key and HTTP Tracking API Version. Write Key : Copy and paste your, now base 64 encoded, Segment Write Key into the text field. Only insert the encoded Write Key into the text field. HTTP Tracking API Version : This field will already be filled out. Only change this if the API version is out of date. Click Apply Using the connector in a flow \u00b6 Some Segment connector use cases: \u00b6 Collect data on a user as they journey through the different branches of a flow. Collect data on what buttons are being pressed on a website. Collect data on what webpages are being viewed on a website. Collect data on what screens are being viewed in a mobile app. Collect data on what groups/teams a specific user is in. Create/Update/Combine user traits and characteristics. Segment API Request Requirements: \u00b6 The User ID is required to send successful requests. Each capability has a specific characteristic that must be filled out. Track User must have an Event string or character. Page User Is On must have a Page Name string or character. Screen User Is On must have a Screen Name string or character. Identify User's Group must have a Group ID string or character. Alias must have a Previous User ID string or character and a User ID string or character. Use Case - create a user to track through a flow: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Segment connector and choose the Identify User capability. This Segment connector capability has two capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variable from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. The User ID is a custom, user-defined string that is used to identify a specific user. E.g. 1, 001, #0001, etc. All characters are acceptable. The Key-Value List is used to define traits about the user. E.g. | Key | Value | | --- | --- | | email | example@email.com | Clicking on the + button adds a key-value field. Key : key of a key-value pair in the Segment traits object. Value : value of a key-value pair in the Segment traits object. The Segment connector does not generate any output on its own. To see the HTTP response object sent by Segment you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. This connector can now be used to define/update information about a user as they navigate through a flow. Use Case - track a defined user to through a flow: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Segment connector and choose the Track User capability. This Segment connector capability has three capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variable from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. The User ID is a custom, user-defined string that is used to identify a specific user. E.g. 1, 001, #0001, etc. All characters are acceptable. In most cases this will be a user that has already been created. The Event field is a user-defined string that is used to identify a specific event. E.g. Button Clicked, Item Purchased, Item Added to Cart, etc... These are events triggered by user interaction The Key Value List is used as to define properties about the event. E.g. | Key | Value | | --- | --- | | item | Chocolate Bar | Clicking on the + button adds a key value field. Key : key of a key-value pair in the traits object. Value : value of a key-value pair in the traits object. The Segment connector does not generate any output on its own. To see the HTTP response object sent by Segment you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. This connector can now be used to track the frequency of certain events through a flow. Use Case - create custom API call: \u00b6 Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Segment connector capability has 5 capability level properties that can be manually filled out: Endpoint : Used to call a specific operation from inside the Segment API. E.g. identify, group, track, page, screen, alias Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Parameters : The kye-value pairs that appear in the Segment traits and properties objects. E.g. email=usename@mail.com, name=John Smith, company=PingIdentity . This is also where you must specify the required key-value pairs for each endpoint. The following key names must be used for the corresponding endpoint. E.g. group: | Key | Value | | --- | --- | | groupId | 5 | track: | Key | Value | | --- | --- | | event | Purchase Button Clicked | page: | Key | Value | | --- | --- | | name | Home Page | screen: | Key | Value | | --- | --- | | name | Home Screen | alias: | Key | Value | | --- | --- | | previousId | 0001 | Once the required endpoint key-value pair is setup you can add as many additional descriptor pairs as desired. The only endpoint that doesn't have a required pair is the identify endpoint. Headers : Key-value pairs that represent the meta-data associated with the Segment API request and response. E.g. Content-Type: application/json These aren't visible frrom the Segment request object found in the Segment workspace Body : Used to manually craft a JSON request body for the Segment API. The Segment connector does not generate any output on its own. To see the information retrieved by the Segment connector you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run. Capabilities \u00b6 Leave this section blank: it will be generated automatically","title":"Segment Connector"},{"location":"segment/#segment-connector","text":"Author: Matthew Teets","title":"Segment Connector"},{"location":"segment/#introduction","text":"Using the software and APIs from Segment, this connector collects, organizes, and cleans your customer data. The Segment connector comes loaded with 7 capabilities that the user is able to start operating out of the box.","title":"Introduction"},{"location":"segment/#capabilities","text":"Identify Group Track Page Screen Alias Make Custom API Call","title":"Capabilities:"},{"location":"segment/#setup","text":"","title":"Setup"},{"location":"segment/#resources","text":"","title":"Resources"},{"location":"segment/#for-information-and-additional-help-see-the-following-sections-of-the-segment-api-documentation","text":"Segment Capabilities API Documentation: HTTP Tracking API Source Identify Group Track Page Screen Alias DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector","title":"For information and additional help, see the following sections of the Segment API documentation:"},{"location":"segment/#requirements","text":"","title":"Requirements"},{"location":"segment/#to-use-the-segment-connector","text":"You must first sign up for a free account and workspace with Segment. Create an account here You then must locate and copy your account Write Key. Access the Write Key here Segment requires a Basic Auth Header to be passed with the API request. View setup instructions here To collect data using Segment you must have a source. View source setup instructions here Segment offers testing and debugging tools to easily confirm that your API calls are being successfully sent to the source. View testing and debugging instructions here","title":"To use the Segment connector:"},{"location":"segment/#setting-up-the-connector","text":"","title":"Setting up the connector"},{"location":"segment/#segment-connector-general-settings","text":"Navigate to the Clearbit connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner. Search for the desired connector (in this case, Segment). Select the Segment connector. Once the Segment connector has been added the Your Connections list, click on Segment. From here you will see two text fields labeled Write Key and HTTP Tracking API Version. Write Key : Copy and paste your, now base 64 encoded, Segment Write Key into the text field. Only insert the encoded Write Key into the text field. HTTP Tracking API Version : This field will already be filled out. Only change this if the API version is out of date. Click Apply","title":"Segment Connector General Settings:"},{"location":"segment/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"segment/#some-segment-connector-use-cases","text":"Collect data on a user as they journey through the different branches of a flow. Collect data on what buttons are being pressed on a website. Collect data on what webpages are being viewed on a website. Collect data on what screens are being viewed in a mobile app. Collect data on what groups/teams a specific user is in. Create/Update/Combine user traits and characteristics.","title":"Some Segment connector use cases:"},{"location":"segment/#segment-api-request-requirements","text":"The User ID is required to send successful requests. Each capability has a specific characteristic that must be filled out. Track User must have an Event string or character. Page User Is On must have a Page Name string or character. Screen User Is On must have a Screen Name string or character. Identify User's Group must have a Group ID string or character. Alias must have a Previous User ID string or character and a User ID string or character.","title":"Segment API Request Requirements:"},{"location":"segment/#use-case-create-a-user-to-track-through-a-flow","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Segment connector and choose the Identify User capability. This Segment connector capability has two capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variable from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. The User ID is a custom, user-defined string that is used to identify a specific user. E.g. 1, 001, #0001, etc. All characters are acceptable. The Key-Value List is used to define traits about the user. E.g. | Key | Value | | --- | --- | | email | example@email.com | Clicking on the + button adds a key-value field. Key : key of a key-value pair in the Segment traits object. Value : value of a key-value pair in the Segment traits object. The Segment connector does not generate any output on its own. To see the HTTP response object sent by Segment you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. This connector can now be used to define/update information about a user as they navigate through a flow.","title":"Use Case - create a user to track through a flow:"},{"location":"segment/#use-case-track-a-defined-user-to-through-a-flow","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Segment connector and choose the Track User capability. This Segment connector capability has three capability level properties that can be filled out 1 of 2 ways: Manually inserting the desired values into the fields. Selecting the appropriate output variable from a previous connector via the angle bracket button ( {} ). E.g. an HTTP connector with an HTML form that prompts the user for the desired values. The User ID is a custom, user-defined string that is used to identify a specific user. E.g. 1, 001, #0001, etc. All characters are acceptable. In most cases this will be a user that has already been created. The Event field is a user-defined string that is used to identify a specific event. E.g. Button Clicked, Item Purchased, Item Added to Cart, etc... These are events triggered by user interaction The Key Value List is used as to define properties about the event. E.g. | Key | Value | | --- | --- | | item | Chocolate Bar | Clicking on the + button adds a key value field. Key : key of a key-value pair in the traits object. Value : value of a key-value pair in the traits object. The Segment connector does not generate any output on its own. To see the HTTP response object sent by Segment you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose the output (object) by clicking (+) . Click apply In the upper right hand corner click Save, Deploy, and Run. This connector can now be used to track the frequency of certain events through a flow.","title":"Use Case - track a defined user to through a flow:"},{"location":"segment/#use-case-create-custom-api-call","text":"Navigate to the flow studio and in the upper right-hand corner select Create New Flow Insert the desired name and description and click next. Select Blank Flow then click save. Once inside the flow sandbox add the Clearbit connector and choose the Make Custom API Call capability. This Segment connector capability has 5 capability level properties that can be manually filled out: Endpoint : Used to call a specific operation from inside the Segment API. E.g. identify, group, track, page, screen, alias Method : Specifies the HTTP CRUD request. E.g. GET, POST, PUT, DELETE, PATCH. Parameters : The kye-value pairs that appear in the Segment traits and properties objects. E.g. email=usename@mail.com, name=John Smith, company=PingIdentity . This is also where you must specify the required key-value pairs for each endpoint. The following key names must be used for the corresponding endpoint. E.g. group: | Key | Value | | --- | --- | | groupId | 5 | track: | Key | Value | | --- | --- | | event | Purchase Button Clicked | page: | Key | Value | | --- | --- | | name | Home Page | screen: | Key | Value | | --- | --- | | name | Home Screen | alias: | Key | Value | | --- | --- | | previousId | 0001 | Once the required endpoint key-value pair is setup you can add as many additional descriptor pairs as desired. The only endpoint that doesn't have a required pair is the identify endpoint. Headers : Key-value pairs that represent the meta-data associated with the Segment API request and response. E.g. Content-Type: application/json These aren't visible frrom the Segment request object found in the Segment workspace Body : Used to manually craft a JSON request body for the Segment API. The Segment connector does not generate any output on its own. To see the information retrieved by the Segment connector you can do the following: Add an HTTP block after your Segment connector. Click on the Custom HTML Message capability. In the Message text area select the circular angel bracket button ( {} ) From the dropdown, select the Segment connector. Choose from any of the offered successful response output variables. rawResponse statusCode headers Click apply In the upper right hand corner click Save, Deploy, and Run.","title":"Use Case - create custom API call:"},{"location":"segment/#capabilities_1","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"sendgrid/","text":"Examples of completed connector documentation: \u00b6 https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html Template Simple Connector \u00b6 Doc draft \u00b6 Author: Introduction \u00b6 [Describe the product. List the main use cases the connector supports.] Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the [service name] documentation: [Link to resources from the service documentation \u00b6 Requirements \u00b6 To use the connector, you'll need: [List pre-requisites] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 [List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .] Using the connector in a flow \u00b6 [Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as: [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] Capabilities \u00b6 Leave this section blank: it will be generated automatically Troubleshooting \u00b6 [Optional section] Common solutions \u00b6 [Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.] Troubleshooting resources \u00b6 [Resource description] \u00b6 [Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.] Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities . Limitations \u00b6 [Optional section] [Describe any issues or limitations.]","title":"Index"},{"location":"sendgrid/#examples-of-completed-connector-documentation","text":"https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html","title":"Examples of completed connector documentation:"},{"location":"sendgrid/#template-simple-connector","text":"","title":"Template Simple Connector"},{"location":"sendgrid/#doc-draft","text":"Author:","title":"Doc draft"},{"location":"sendgrid/#introduction","text":"[Describe the product. List the main use cases the connector supports.]","title":"Introduction"},{"location":"sendgrid/#setup","text":"","title":"Setup"},{"location":"sendgrid/#resources","text":"For information and setup help, see the following sections of the [service name] documentation:","title":"Resources"},{"location":"sendgrid/#link-to-resources-from-the-service-documentation","text":"","title":"[Link to resources from the service documentation"},{"location":"sendgrid/#requirements","text":"To use the connector, you'll need: [List pre-requisites]","title":"Requirements"},{"location":"sendgrid/#task-name","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"sendgrid/#task-name_1","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"sendgrid/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"sendgrid/#connector-settings","text":"[List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .]","title":"Connector settings"},{"location":"sendgrid/#using-the-connector-in-a-flow","text":"[Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"sendgrid/#use-case","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"sendgrid/#use-case_1","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"sendgrid/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"sendgrid/#troubleshooting","text":"[Optional section]","title":"Troubleshooting"},{"location":"sendgrid/#common-solutions","text":"[Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.]","title":"Common solutions"},{"location":"sendgrid/#troubleshooting-resources","text":"","title":"Troubleshooting resources"},{"location":"sendgrid/#resource-description","text":"[Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.]","title":"[Resource description]"},{"location":"sendgrid/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"sendgrid/#limitations","text":"[Optional section] [Describe any issues or limitations.]","title":"Limitations"},{"location":"shopify/","text":"Shopify Connector \u00b6 Author: Scott Banducci (scottbanducci@pingidentity.com) Introduction \u00b6 Shopify is an e-commerce platform for online stores. The Shopify platform offers online retailers a suite of services including payments, marketing, shipping and customer engagement tools. The Shopify Connector for Davinci allows you to: Create a customer Read a customer Update a customer Delete a customer List customers (with some filters) Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Shopify documentation: Shopify Create, Read, Update, List customer(s) Delete customer Requirements \u00b6 To use the connector, you'll need: A Shopify store Your store's Admin API Access Token Go to your store's admin page -> Settings (bottom left corner) -> Apps and Sales Channels -> Develop Apps for your store -> click the store/sales channel you want an API token for -> API Credentials An API Version Number (as of June 15, 2022 we recommend \"2022-04\") Shopify versioning documentation Your Shopify store name (as appears in your {{storename}}.myshopify.com domain) Shopify Domains documentation Setting up the connector \u00b6 In Davinci, add a Shopify connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection . Connector settings \u00b6 Once you've added the connection click on it's logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) API Version number 2) Store Name 3) Access Token and click apply. This ensures that whenever you use this connector you will not have to reenter enter this information. Using the connector in a flow \u00b6 The Shopify connector allows you to create, read, modify, list and delete customers in your Shopify store as part of your flow. In the flow studio add a Shopify connector. Then choose the capability you'd like to use it for (create, read, update, delete, list). You will then need to select the parameters you need from previous nodes in the flow (ex. an HTML form) to populate the fields. Creating a customer on your Shopify store \u00b6 If your business also sells branded merchandise via a Shopify store, you can enable your customers to make a purchase without the hassle of signing up to your Shopify store and entering information they've already provided to you. Changing customer details \u00b6 If a customer of yours changes their address or deletes their account, you can use a Davinci flow and the Shopify connector to automatically cascade those changes to your Shopify store. Generate a list of customers \u00b6 Lastly, should you wish to extract customer information you can use the connector to retrieve a list of customer objects (in JSON) from Shopify to use as you see fit. Current list filters available via connector: Created Before / Created After Updated Before / Updated After Limit (#of results returned, max 250) Filters NOT available via connector yet can be added as parameters to a GET HTTP request for a list of customers can be found here . Capabilities \u00b6 Leave this section blank: it will be generated automatically Troubleshooting \u00b6 Note that the Shopify API call will respond with either: 1) \"customer\" object (create, read, update), 2) \"customers\" object (list), 3) \"customerDelete\" object (delete) See previously linked Shopify Documentation for details on these objects. Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities . Limitations \u00b6 filtering parameters for the List Customers capability on this connector is not exhaustive compared to what the Shopify's API allows Unable to create, delete, update batches of customers","title":"Shopify Connector"},{"location":"shopify/#shopify-connector","text":"Author: Scott Banducci (scottbanducci@pingidentity.com)","title":"Shopify Connector"},{"location":"shopify/#introduction","text":"Shopify is an e-commerce platform for online stores. The Shopify platform offers online retailers a suite of services including payments, marketing, shipping and customer engagement tools. The Shopify Connector for Davinci allows you to: Create a customer Read a customer Update a customer Delete a customer List customers (with some filters)","title":"Introduction"},{"location":"shopify/#setup","text":"","title":"Setup"},{"location":"shopify/#resources","text":"For information and setup help, see the following sections of the Shopify documentation: Shopify Create, Read, Update, List customer(s) Delete customer","title":"Resources"},{"location":"shopify/#requirements","text":"To use the connector, you'll need: A Shopify store Your store's Admin API Access Token Go to your store's admin page -> Settings (bottom left corner) -> Apps and Sales Channels -> Develop Apps for your store -> click the store/sales channel you want an API token for -> API Credentials An API Version Number (as of June 15, 2022 we recommend \"2022-04\") Shopify versioning documentation Your Shopify store name (as appears in your {{storename}}.myshopify.com domain) Shopify Domains documentation","title":"Requirements"},{"location":"shopify/#setting-up-the-connector","text":"In Davinci, add a Shopify connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"shopify/#connector-settings","text":"Once you've added the connection click on it's logo, or click the \" \u00b7 \u00b7 \u00b7 \" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your 1) API Version number 2) Store Name 3) Access Token and click apply. This ensures that whenever you use this connector you will not have to reenter enter this information.","title":"Connector settings"},{"location":"shopify/#using-the-connector-in-a-flow","text":"The Shopify connector allows you to create, read, modify, list and delete customers in your Shopify store as part of your flow. In the flow studio add a Shopify connector. Then choose the capability you'd like to use it for (create, read, update, delete, list). You will then need to select the parameters you need from previous nodes in the flow (ex. an HTML form) to populate the fields.","title":"Using the connector in a flow"},{"location":"shopify/#creating-a-customer-on-your-shopify-store","text":"If your business also sells branded merchandise via a Shopify store, you can enable your customers to make a purchase without the hassle of signing up to your Shopify store and entering information they've already provided to you.","title":"Creating a customer on your Shopify store"},{"location":"shopify/#changing-customer-details","text":"If a customer of yours changes their address or deletes their account, you can use a Davinci flow and the Shopify connector to automatically cascade those changes to your Shopify store.","title":"Changing customer details"},{"location":"shopify/#generate-a-list-of-customers","text":"Lastly, should you wish to extract customer information you can use the connector to retrieve a list of customer objects (in JSON) from Shopify to use as you see fit. Current list filters available via connector: Created Before / Created After Updated Before / Updated After Limit (#of results returned, max 250) Filters NOT available via connector yet can be added as parameters to a GET HTTP request for a list of customers can be found here .","title":"Generate a list of customers"},{"location":"shopify/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"shopify/#troubleshooting","text":"Note that the Shopify API call will respond with either: 1) \"customer\" object (create, read, update), 2) \"customers\" object (list), 3) \"customerDelete\" object (delete) See previously linked Shopify Documentation for details on these objects.","title":"Troubleshooting"},{"location":"shopify/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"shopify/#limitations","text":"filtering parameters for the List Customers capability on this connector is not exhaustive compared to what the Shopify's API allows Unable to create, delete, update batches of customers","title":"Limitations"},{"location":"whatsapp-business/","text":"WhatsApp for Business \u00b6 Author: Matthew Teets Introduction \u00b6 You can use the WhatsApp connector to send templated messages to any WhatsApp account. The WhatsApp connector so far has the single capability that allows the user to fillout WhatsApp templated messages, and send them from the connector to a single users WhatsApp account. The connector cannot receive any messsages or input from the recipient of the templated messages, but takes care of all API requests and variable formatting. You can use the WhatsApp connector to send: * Text message templates * A message template that uses only text for both the header and body of the message * Media message templates * A message template that uses an image URL for the header of the message and text for the body * Interactive message templates * A message template that reads end user input on interactive buttons attached to the message Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the WhatsApp API documentation: \u00b6 WhatsApp API Documentation: Send Message Template Overview Text-Based Message Template Media-Based Message Template Interactive Message Template All API Parameters and Objects DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector Requirements \u00b6 To use WhatsApp connector: \u00b6 Overview of Required Assets This will help you generate the required access token. Current Graph API Version Message Template Creation Message Template Guidelines Setting up the connector \u00b6 WhatsApp Connector General Settings: \u00b6 Navigate to the WhatsApp connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner Search for the desired connector (in this case, WhatsApp). Click on the WhatsApp connector. From here you will see two text fields: Access Token and Version Access Token: Copy and paste your permanent access token into the corresponding text field. Version: The version will be filled out already. Update the version if necessary. Using the connector in a flow \u00b6 You can use the WhatsApp connector in a variety of use cases, such as: \u00b6 Sending customers an automated, personal welcome/goodbye message. Sending customers a confirmation message regarding a purchased product. Sending customers reminders about current or upcoming deals and promotions. etc... Points to take into account when using the WhatsApp connector: \u00b6 The WhatsApp connector must have a trigger block before it will send any messages to the WhatsApp API (e.g. Custom HTML Message). The WhatsApp connector does not generate any output on its own. To see the the raw output from the WhatsApp connector you can do the following: Add a Custom HTML Message after your WhatsApp connector. Click on the HTML block and in the Message text field select the circular angel bracket button From the dropdown, select the WhatsApp connector On the same line as the output (object) click on the circular plus button Pre-requisites to using WhatsApp connector in a flow: \u00b6 You must have a working permanent access token. You must have the current version of the graph API. You must have a valid and approved message template. You must have valid to and from WhatsApp phone numbes in order to send messages. Once the WhatsApp connector is properly configured and added to the flow studio sandbox you will be ready to start sending templated messsages to your WhatsApp customers (all message use cases directly rely upon the users pre-approved message templates). Text Message Template \u00b6 Compatible with templates that use: - Body variable(s) Incompatible with templates that use: - Text header variable - Media header - No body variable(s) - Call to action buttons - Quick reply buttons Once inside of the flow studio: \u00b6 Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Text messsage template . In the next text field labeled Text Message Template Name copy and paste the pre-approved message template name you created in the WhatsApp Facebook Developer Dashboard. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables. Run the flow: \u00b6 Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button. Media Message Template \u00b6 Compatible with templates that use: - Image header - Body variable(s) Incompatible with templates that use: - No body variable(s) - Call to action buttons - Quick reply buttons Once inside of the flow studio: \u00b6 Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Media messsage template . In the next text field labeled Media Message Template Name copy and paste the pre-approved message template name you created in the WhatsApp Facebook Developer Dashboard. The Media Message URL text field is where you copy and paste the header image URL. Use only HTTP/HTTPS URLs. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables. Run the flow: \u00b6 Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button. Interactive Message Template \u00b6 Compatible with templates that use: - Body variable(s) - Call to action buttons (either/both) Incompatible with templates that use: - Text header variable - Media header - No body variable(s) - Quick reply buttons Once inside of the flow studio: \u00b6 Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Interactive messsage template . In the next text field labeled Interactive Message Template Name copy and paste the message template name you created in the Facebook WhatsApp Developer Dashboard. The Visit Website button is handled during the creation of the message template, thus no configuration is required within the connector. The same rules apply to the Call phone number button, no configuration is required inside of the WhatsApp connector. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables. Run the flow: \u00b6 Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button. Capabilities \u00b6 Leave this section blank: it will be generated automatically","title":"WhatsApp for Business"},{"location":"whatsapp-business/#whatsapp-for-business","text":"Author: Matthew Teets","title":"WhatsApp for Business"},{"location":"whatsapp-business/#introduction","text":"You can use the WhatsApp connector to send templated messages to any WhatsApp account. The WhatsApp connector so far has the single capability that allows the user to fillout WhatsApp templated messages, and send them from the connector to a single users WhatsApp account. The connector cannot receive any messsages or input from the recipient of the templated messages, but takes care of all API requests and variable formatting. You can use the WhatsApp connector to send: * Text message templates * A message template that uses only text for both the header and body of the message * Media message templates * A message template that uses an image URL for the header of the message and text for the body * Interactive message templates * A message template that reads end user input on interactive buttons attached to the message","title":"Introduction"},{"location":"whatsapp-business/#setup","text":"","title":"Setup"},{"location":"whatsapp-business/#resources","text":"","title":"Resources"},{"location":"whatsapp-business/#for-information-and-setup-help-see-the-following-sections-of-the-whatsapp-api-documentation","text":"WhatsApp API Documentation: Send Message Template Overview Text-Based Message Template Media-Based Message Template Interactive Message Template All API Parameters and Objects DaVinci Documentation: Login to DaVinci Import a flow from the Flow Library Add Desired connector","title":"For information and setup help, see the following sections of the WhatsApp API documentation:"},{"location":"whatsapp-business/#requirements","text":"","title":"Requirements"},{"location":"whatsapp-business/#to-use-whatsapp-connector","text":"Overview of Required Assets This will help you generate the required access token. Current Graph API Version Message Template Creation Message Template Guidelines","title":"To use WhatsApp connector:"},{"location":"whatsapp-business/#setting-up-the-connector","text":"","title":"Setting up the connector"},{"location":"whatsapp-business/#whatsapp-connector-general-settings","text":"Navigate to the WhatsApp connector via the Connections tab in DaVinci. Select New Connection in the upper right-hand corner Search for the desired connector (in this case, WhatsApp). Click on the WhatsApp connector. From here you will see two text fields: Access Token and Version Access Token: Copy and paste your permanent access token into the corresponding text field. Version: The version will be filled out already. Update the version if necessary.","title":"WhatsApp Connector General Settings:"},{"location":"whatsapp-business/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"whatsapp-business/#you-can-use-the-whatsapp-connector-in-a-variety-of-use-cases-such-as","text":"Sending customers an automated, personal welcome/goodbye message. Sending customers a confirmation message regarding a purchased product. Sending customers reminders about current or upcoming deals and promotions. etc...","title":"You can use the WhatsApp connector in a variety of use cases, such as:"},{"location":"whatsapp-business/#points-to-take-into-account-when-using-the-whatsapp-connector","text":"The WhatsApp connector must have a trigger block before it will send any messages to the WhatsApp API (e.g. Custom HTML Message). The WhatsApp connector does not generate any output on its own. To see the the raw output from the WhatsApp connector you can do the following: Add a Custom HTML Message after your WhatsApp connector. Click on the HTML block and in the Message text field select the circular angel bracket button From the dropdown, select the WhatsApp connector On the same line as the output (object) click on the circular plus button","title":"Points to take into account when using the WhatsApp connector:"},{"location":"whatsapp-business/#pre-requisites-to-using-whatsapp-connector-in-a-flow","text":"You must have a working permanent access token. You must have the current version of the graph API. You must have a valid and approved message template. You must have valid to and from WhatsApp phone numbes in order to send messages. Once the WhatsApp connector is properly configured and added to the flow studio sandbox you will be ready to start sending templated messsages to your WhatsApp customers (all message use cases directly rely upon the users pre-approved message templates).","title":"Pre-requisites to using WhatsApp connector in a flow:"},{"location":"whatsapp-business/#text-message-template","text":"Compatible with templates that use: - Body variable(s) Incompatible with templates that use: - Text header variable - Media header - No body variable(s) - Call to action buttons - Quick reply buttons","title":"Text Message Template"},{"location":"whatsapp-business/#once-inside-of-the-flow-studio","text":"Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Text messsage template . In the next text field labeled Text Message Template Name copy and paste the pre-approved message template name you created in the WhatsApp Facebook Developer Dashboard. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables.","title":"Once inside of the flow studio:"},{"location":"whatsapp-business/#run-the-flow","text":"Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button.","title":"Run the flow:"},{"location":"whatsapp-business/#media-message-template","text":"Compatible with templates that use: - Image header - Body variable(s) Incompatible with templates that use: - No body variable(s) - Call to action buttons - Quick reply buttons","title":"Media Message Template"},{"location":"whatsapp-business/#once-inside-of-the-flow-studio_1","text":"Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Media messsage template . In the next text field labeled Media Message Template Name copy and paste the pre-approved message template name you created in the WhatsApp Facebook Developer Dashboard. The Media Message URL text field is where you copy and paste the header image URL. Use only HTTP/HTTPS URLs. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables.","title":"Once inside of the flow studio:"},{"location":"whatsapp-business/#run-the-flow_1","text":"Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button.","title":"Run the flow:"},{"location":"whatsapp-business/#interactive-message-template","text":"Compatible with templates that use: - Body variable(s) - Call to action buttons (either/both) Incompatible with templates that use: - Text header variable - Media header - No body variable(s) - Quick reply buttons","title":"Interactive Message Template"},{"location":"whatsapp-business/#once-inside-of-the-flow-studio_2","text":"Add a Custom HTML Messsage connector to the sandbox. Drag the black circular node on the right-side of the HTML connector out and release. Select the WhatsApp connector. Click on the connector and select the Send Message capability. In the Recipient text field insert the desired WhatsApp phone number (the number of the account that will be receiving the message). In the From Phone Number ID enter the phone number ID of the device sending the message. Click on the Message Type dropdown menu and select the desired message template type. In this case the type would be Interactive messsage template . In the next text field labeled Interactive Message Template Name copy and paste the message template name you created in the Facebook WhatsApp Developer Dashboard. The Visit Website button is handled during the creation of the message template, thus no configuration is required within the connector. The same rules apply to the Call phone number button, no configuration is required inside of the WhatsApp connector. Now fill out the variables you except in the template: Variable Name = arbitrary user-created, camel-Case name of your variable Example: customerName Value = what you want to be inserted in the message Example: Bob Smith Data Type = depends on what the value of your variable is Example: String The final Add and Edit buttons are used to add/manipulate variables.","title":"Once inside of the flow studio:"},{"location":"whatsapp-business/#run-the-flow_2","text":"Once you have successfully filled out the necessary connector information you are ready to send. In the upper right-hand corner of the Flow Studio click: Save, Deploy, and the blue play button.","title":"Run the flow:"},{"location":"whatsapp-business/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"zendesk/","text":"Examples of completed connector documentation: \u00b6 https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html Template Simple Connector \u00b6 Doc draft \u00b6 Author: Introduction \u00b6 [Describe the product. List the main use cases the connector supports.] Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the [service name] documentation: [Link to resources from the service documentation \u00b6 Requirements \u00b6 To use the connector, you'll need: [List pre-requisites] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] [Task name] \u00b6 [Describe what needs to be done before adding the connection in Singular Key] [Steps] Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 [List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .] Using the connector in a flow \u00b6 [Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as: [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] [Use case] \u00b6 [Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?] Capabilities \u00b6 Leave this section blank: it will be generated automatically Troubleshooting \u00b6 [Optional section] Common solutions \u00b6 [Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.] Troubleshooting resources \u00b6 [Resource description] \u00b6 [Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.] Testing capabilities \u00b6 You can test each capability individually. For help, see Testing capabilities . Limitations \u00b6 [Optional section] [Describe any issues or limitations.]","title":"Index"},{"location":"zendesk/#examples-of-completed-connector-documentation","text":"https://docs.pingidentity.com/bundle/davinci-pingone-risk-connector/page/enk1642800997036.html https://docs.pingidentity.com/bundle/davinci-pingone-connector/page/hlh1642792860912.html","title":"Examples of completed connector documentation:"},{"location":"zendesk/#template-simple-connector","text":"","title":"Template Simple Connector"},{"location":"zendesk/#doc-draft","text":"Author:","title":"Doc draft"},{"location":"zendesk/#introduction","text":"[Describe the product. List the main use cases the connector supports.]","title":"Introduction"},{"location":"zendesk/#setup","text":"","title":"Setup"},{"location":"zendesk/#resources","text":"For information and setup help, see the following sections of the [service name] documentation:","title":"Resources"},{"location":"zendesk/#link-to-resources-from-the-service-documentation","text":"","title":"[Link to resources from the service documentation"},{"location":"zendesk/#requirements","text":"To use the connector, you'll need: [List pre-requisites]","title":"Requirements"},{"location":"zendesk/#task-name","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"zendesk/#task-name_1","text":"[Describe what needs to be done before adding the connection in Singular Key] [Steps]","title":"[Task name]"},{"location":"zendesk/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"zendesk/#connector-settings","text":"[List and explain the connector settings that appear when the connection is opened from the Connections page. If you did not cover it earlier in the Setup section, tell the user how to complete each configuration field or where to get the information they need. These typically on the General tab, but some connectors have a different name or multiple configuration tabs. Don't document Capabilities , or In Flows .]","title":"Connector settings"},{"location":"zendesk/#using-the-connector-in-a-flow","text":"[Describe how to use the connector after it has been set up.] You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"zendesk/#use-case","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"zendesk/#use-case_1","text":"[Describe how to use the connector in this use case. Does it come with a related flow template? Is there a generic use case flow to follow in the Singular Key core documentation?]","title":"[Use case]"},{"location":"zendesk/#capabilities","text":"Leave this section blank: it will be generated automatically","title":"Capabilities"},{"location":"zendesk/#troubleshooting","text":"[Optional section]","title":"Troubleshooting"},{"location":"zendesk/#common-solutions","text":"[Describe solutions to common problems the user might encounter when setting up or using the connector. If there are any required steps, include them in the Setup section.]","title":"Common solutions"},{"location":"zendesk/#troubleshooting-resources","text":"","title":"Troubleshooting resources"},{"location":"zendesk/#resource-description","text":"[Describe other resources, tools, reference information, or links that might be helpful when troubleshooting.]","title":"[Resource description]"},{"location":"zendesk/#testing-capabilities","text":"You can test each capability individually. For help, see Testing capabilities .","title":"Testing capabilities"},{"location":"zendesk/#limitations","text":"[Optional section] [Describe any issues or limitations.]","title":"Limitations"},{"location":"zscaler/","text":"Zscaler User Flow Connector \u00b6 Introduction \u00b6 Zscaler User Flow Davinci connector can be used to create and manage user details. This connector allows you to: Create User Update User Get User Details Delete User Get Group by ID Get All Groups Get Department by ID Get All Departments Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Zscaler documentation: Pre-requisite to Access API User Management API Requirements \u00b6 To use the connector, you'll need: ZIA Admin Portal Access Setting up the connector \u00b6 In Davinci, add a Zscaler User Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection . Connector Settings \u00b6 Once you've added the Zscaler User Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your Zscaler admin account details below: Zscaler Domain url Zscaler Base path API Key Admin Username Admin Password and click apply. This ensures that whenever you use this connector you will not have to reenter this information and generate the cookie to be used in flow to authenticate and create API sessions. Using the connector in a flow \u00b6 Create User Flow \u00b6 To create user add a Zscaler User Flow Connector in the flow studio. Then choose the Create User - Zscaler capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Update User Flow \u00b6 To update user attributes saved add a Zscaler User Flow Connector in the flow studio. Then choose the Update User - Zscaler capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details. Delete User Flow \u00b6 To inactivate the exsting user add a Zscaler User Flow Connector in the flow studio. Then choose the Update User - Zscaler capability. Provide the username parameters from previous nodes in the flow (HTML form) to delete the existing user. Get User Flow \u00b6 To get the lists the existing user details based on search parameter provided add a Zscaler User Flow Connector in the flow studio. Then choose the Get User capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria submitted. Get All Groups \u00b6 To get list of Groups add a Zscaler User Flow Connector in the flow studio. Then choose the Get All Groups - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of Groups available based on search query submitted. Get Group By ID \u00b6 To get groups by user ID add a Zscaler User Flow Connector in the flow studio. Then choose the Get Group by ID - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the Group details based on Group ID. Get All Departments \u00b6 To get list of Departments add a Zscaler User Flow Connector in the flow studio. Then choose the Get All Departments - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of Departments available based on search query submitted. Get Department by ID \u00b6 To get Department by user ID add a Zscaler User Flow Connector in the flow studio. Then choose the Get Department by ID - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the Department details based on Department ID. Capabilities \u00b6 Create User (createUser) \u00b6 Adds a new user User Name textField required \u00b6 User Name Email textField \u00b6 User email consists of a user name and domain name Groups ID textField required \u00b6 Unique identfier for the group Groups Name textField required \u00b6 Group name Groups IDPID textField \u00b6 Unique identfier for the identity provider Groups Comments textField \u00b6 Additional information about the group Department ID textField required \u00b6 Department ID Department Name textField required \u00b6 Department name Department IDPID textField \u00b6 Identity provider (IdP) ID Department Comments textField \u00b6 Additional information about this department Department Deleted toggleSwitch \u00b6 default: false Comments textField \u00b6 Additional information about this user Temporary Authentication Email textField \u00b6 If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email. User Password textField required \u00b6 User password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings adminUser toggleSwitch \u00b6 default: false type dropDown \u00b6 type SUPERADMIN ADMIN AUDITOR GUEST REPORT_USER UNAUTH_TRAFFIC_DEFAULT Update User (updateUser) \u00b6 Updates the user information for the specified ID userID textField required \u00b6 userID User Name textField required \u00b6 User Name Email textField \u00b6 User email consists of a user name and domain name Groups ID textField required \u00b6 Unique identfier for the group Groups Name textField required \u00b6 Group name Groups IDPID textField \u00b6 Unique identfier for the identity provider Groups Comments textField \u00b6 Additional information about the group Department ID textField required \u00b6 Department ID Department Name textField required \u00b6 Department name Department IDPID textField \u00b6 Identity provider (IdP) ID Department Comments textField \u00b6 Additional information about this department Department Deleted toggleSwitch \u00b6 default: false Comments textField \u00b6 Additional information about this user Temporary Authentication Email textField \u00b6 If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email. User Password textField required \u00b6 User password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings adminUser toggleSwitch \u00b6 default: false type dropDown \u00b6 type SUPERADMIN ADMIN AUDITOR GUEST REPORT_USER UNAUTH_TRAFFIC_DEFAULT Get User (getUser) \u00b6 Gets a list of all users and allows user filtering by name, department, or group User Name textField required \u00b6 User Name Groups Name textField required \u00b6 Group name Department Name textField required \u00b6 Department name Page textField \u00b6 Specifies the page offset Page Size textField \u00b6 Specifies the page size Delete User (deleteUser) \u00b6 Delete User userID textField required \u00b6 userID Get All Department (getAllDepartments) \u00b6 Gets a list of departments Page textField \u00b6 Specifies the page offset Page Size textField \u00b6 Specifies the page size Search textField \u00b6 The search string used to match against a name or comments Limit Search textField \u00b6 Limits the search to match against the department name only Get Department By ID (getDepartmentByID) \u00b6 Gets the department for the specified ID Department ID textField required \u00b6 Department ID Get All groups (getAllGroups) \u00b6 Gets a list of groups Search textField \u00b6 The search string used to match against a name or comments Page textField \u00b6 Specifies the page offset Page Size textField \u00b6 Specifies the page size Get Groups By ID (getGroupByID) \u00b6 Gets the group for the specified ID Groups ID textField required \u00b6 Unique identfier for the group Limitations \u00b6 Use of Zscaler User Flow Connector is limited by the availability of Zscaler API and account access.","title":"Zscaler User Flow Connector"},{"location":"zscaler/#zscaler-user-flow-connector","text":"","title":"Zscaler User Flow Connector"},{"location":"zscaler/#introduction","text":"Zscaler User Flow Davinci connector can be used to create and manage user details. This connector allows you to: Create User Update User Get User Details Delete User Get Group by ID Get All Groups Get Department by ID Get All Departments","title":"Introduction"},{"location":"zscaler/#setup","text":"","title":"Setup"},{"location":"zscaler/#resources","text":"For information and setup help, see the following sections of the Zscaler documentation: Pre-requisite to Access API User Management API","title":"Resources"},{"location":"zscaler/#requirements","text":"To use the connector, you'll need: ZIA Admin Portal Access","title":"Requirements"},{"location":"zscaler/#setting-up-the-connector","text":"In Davinci, add a Zscaler User Flow connection via the \"Connections\" tab in your Davinci Environment. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"zscaler/#connector-settings","text":"Once you've added the Zscaler User Flow connection click on it's logo, or click the \"\u00b7\u00b7\u00b7\" button and edit. You will see the connector's details pop-up. On the GENERAL tab, enter in your Zscaler admin account details below: Zscaler Domain url Zscaler Base path API Key Admin Username Admin Password and click apply. This ensures that whenever you use this connector you will not have to reenter this information and generate the cookie to be used in flow to authenticate and create API sessions.","title":"Connector Settings"},{"location":"zscaler/#using-the-connector-in-a-flow","text":"","title":"Using the connector in a flow"},{"location":"zscaler/#create-user-flow","text":"To create user add a Zscaler User Flow Connector in the flow studio. Then choose the Create User - Zscaler capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Create User Flow"},{"location":"zscaler/#update-user-flow","text":"To update user attributes saved add a Zscaler User Flow Connector in the flow studio. Then choose the Update User - Zscaler capability. Provide the input parameters to be updated from previous nodes in the flow (HTML form) and submit the details.","title":"Update User Flow"},{"location":"zscaler/#delete-user-flow","text":"To inactivate the exsting user add a Zscaler User Flow Connector in the flow studio. Then choose the Update User - Zscaler capability. Provide the username parameters from previous nodes in the flow (HTML form) to delete the existing user.","title":"Delete User Flow"},{"location":"zscaler/#get-user-flow","text":"To get the lists the existing user details based on search parameter provided add a Zscaler User Flow Connector in the flow studio. Then choose the Get User capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of users based on filter criteria submitted.","title":"Get User Flow"},{"location":"zscaler/#get-all-groups","text":"To get list of Groups add a Zscaler User Flow Connector in the flow studio. Then choose the Get All Groups - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of Groups available based on search query submitted.","title":"Get All Groups"},{"location":"zscaler/#get-group-by-id","text":"To get groups by user ID add a Zscaler User Flow Connector in the flow studio. Then choose the Get Group by ID - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the Group details based on Group ID.","title":"Get Group By ID"},{"location":"zscaler/#get-all-departments","text":"To get list of Departments add a Zscaler User Flow Connector in the flow studio. Then choose the Get All Departments - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the list of Departments available based on search query submitted.","title":"Get All Departments"},{"location":"zscaler/#get-department-by-id","text":"To get Department by user ID add a Zscaler User Flow Connector in the flow studio. Then choose the Get Department by ID - Zscaler capability. Provide the parameters from previous nodes in the flow (HTML form) to retrieve the Department details based on Department ID.","title":"Get Department by ID"},{"location":"zscaler/#capabilities","text":"","title":"Capabilities"},{"location":"zscaler/#create-user-createuser","text":"Adds a new user","title":"Create User (createUser)"},{"location":"zscaler/#user-name-textfield-required","text":"User Name","title":"User Name textField required"},{"location":"zscaler/#email-textfield","text":"User email consists of a user name and domain name","title":"Email textField"},{"location":"zscaler/#groups-id-textfield-required","text":"Unique identfier for the group","title":"Groups ID textField required"},{"location":"zscaler/#groups-name-textfield-required","text":"Group name","title":"Groups Name textField required"},{"location":"zscaler/#groups-idpid-textfield","text":"Unique identfier for the identity provider","title":"Groups IDPID textField"},{"location":"zscaler/#groups-comments-textfield","text":"Additional information about the group","title":"Groups Comments textField"},{"location":"zscaler/#department-id-textfield-required","text":"Department ID","title":"Department ID textField required"},{"location":"zscaler/#department-name-textfield-required","text":"Department name","title":"Department Name textField required"},{"location":"zscaler/#department-idpid-textfield","text":"Identity provider (IdP) ID","title":"Department IDPID textField"},{"location":"zscaler/#department-comments-textfield","text":"Additional information about this department","title":"Department Comments textField"},{"location":"zscaler/#department-deleted-toggleswitch","text":"default: false","title":"Department Deleted toggleSwitch"},{"location":"zscaler/#comments-textfield","text":"Additional information about this user","title":"Comments textField"},{"location":"zscaler/#temporary-authentication-email-textfield","text":"If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email.","title":"Temporary Authentication Email textField"},{"location":"zscaler/#user-password-textfield-required","text":"User password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings","title":"User Password textField required"},{"location":"zscaler/#adminuser-toggleswitch","text":"default: false","title":"adminUser toggleSwitch"},{"location":"zscaler/#type-dropdown","text":"type SUPERADMIN ADMIN AUDITOR GUEST REPORT_USER UNAUTH_TRAFFIC_DEFAULT","title":"type dropDown"},{"location":"zscaler/#update-user-updateuser","text":"Updates the user information for the specified ID","title":"Update User (updateUser)"},{"location":"zscaler/#userid-textfield-required","text":"userID","title":"userID textField required"},{"location":"zscaler/#user-name-textfield-required_1","text":"User Name","title":"User Name textField required"},{"location":"zscaler/#email-textfield_1","text":"User email consists of a user name and domain name","title":"Email textField"},{"location":"zscaler/#groups-id-textfield-required_1","text":"Unique identfier for the group","title":"Groups ID textField required"},{"location":"zscaler/#groups-name-textfield-required_1","text":"Group name","title":"Groups Name textField required"},{"location":"zscaler/#groups-idpid-textfield_1","text":"Unique identfier for the identity provider","title":"Groups IDPID textField"},{"location":"zscaler/#groups-comments-textfield_1","text":"Additional information about the group","title":"Groups Comments textField"},{"location":"zscaler/#department-id-textfield-required_1","text":"Department ID","title":"Department ID textField required"},{"location":"zscaler/#department-name-textfield-required_1","text":"Department name","title":"Department Name textField required"},{"location":"zscaler/#department-idpid-textfield_1","text":"Identity provider (IdP) ID","title":"Department IDPID textField"},{"location":"zscaler/#department-comments-textfield_1","text":"Additional information about this department","title":"Department Comments textField"},{"location":"zscaler/#department-deleted-toggleswitch_1","text":"default: false","title":"Department Deleted toggleSwitch"},{"location":"zscaler/#comments-textfield_1","text":"Additional information about this user","title":"Comments textField"},{"location":"zscaler/#temporary-authentication-email-textfield_1","text":"If you enabled one-time tokens or links, enter the email address to which the Zscaler service sends the tokens or links. If this is empty, the service will send the email to the User email.","title":"Temporary Authentication Email textField"},{"location":"zscaler/#user-password-textfield-required_1","text":"User password. Applicable only when authentication type is Hosted DB. Password strength must follow what is defined in the auth settings","title":"User Password textField required"},{"location":"zscaler/#adminuser-toggleswitch_1","text":"default: false","title":"adminUser toggleSwitch"},{"location":"zscaler/#type-dropdown_1","text":"type SUPERADMIN ADMIN AUDITOR GUEST REPORT_USER UNAUTH_TRAFFIC_DEFAULT","title":"type dropDown"},{"location":"zscaler/#get-user-getuser","text":"Gets a list of all users and allows user filtering by name, department, or group","title":"Get User (getUser)"},{"location":"zscaler/#user-name-textfield-required_2","text":"User Name","title":"User Name textField required"},{"location":"zscaler/#groups-name-textfield-required_2","text":"Group name","title":"Groups Name textField required"},{"location":"zscaler/#department-name-textfield-required_2","text":"Department name","title":"Department Name textField required"},{"location":"zscaler/#page-textfield","text":"Specifies the page offset","title":"Page textField"},{"location":"zscaler/#page-size-textfield","text":"Specifies the page size","title":"Page Size textField"},{"location":"zscaler/#delete-user-deleteuser","text":"Delete User","title":"Delete User (deleteUser)"},{"location":"zscaler/#userid-textfield-required_1","text":"userID","title":"userID textField required"},{"location":"zscaler/#get-all-department-getalldepartments","text":"Gets a list of departments","title":"Get All Department (getAllDepartments)"},{"location":"zscaler/#page-textfield_1","text":"Specifies the page offset","title":"Page textField"},{"location":"zscaler/#page-size-textfield_1","text":"Specifies the page size","title":"Page Size textField"},{"location":"zscaler/#search-textfield","text":"The search string used to match against a name or comments","title":"Search textField"},{"location":"zscaler/#limit-search-textfield","text":"Limits the search to match against the department name only","title":"Limit Search textField"},{"location":"zscaler/#get-department-by-id-getdepartmentbyid","text":"Gets the department for the specified ID","title":"Get Department By ID (getDepartmentByID)"},{"location":"zscaler/#department-id-textfield-required_2","text":"Department ID","title":"Department ID textField required"},{"location":"zscaler/#get-all-groups-getallgroups","text":"Gets a list of groups","title":"Get All groups (getAllGroups)"},{"location":"zscaler/#search-textfield_1","text":"The search string used to match against a name or comments","title":"Search textField"},{"location":"zscaler/#page-textfield_2","text":"Specifies the page offset","title":"Page textField"},{"location":"zscaler/#page-size-textfield_2","text":"Specifies the page size","title":"Page Size textField"},{"location":"zscaler/#get-groups-by-id-getgroupbyid","text":"Gets the group for the specified ID","title":"Get Groups By ID (getGroupByID)"},{"location":"zscaler/#groups-id-textfield-required_2","text":"Unique identfier for the group","title":"Groups ID textField required"},{"location":"zscaler/#limitations","text":"Use of Zscaler User Flow Connector is limited by the availability of Zscaler API and account access.","title":"Limitations"}]}